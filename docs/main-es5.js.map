{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/pages/game/game.component.html","webpack:///src/app/pages/game/game.component.ts","webpack:///src/app/pages/game/game.module.ts","webpack:///src/app/pages/game/ribbon.component.ts","webpack:///src/app/pages/game/strategy-card.component.ts","webpack:///src/app/pages/game/strategy-card.component.html","webpack:///src/app/pages/game/value-gauge.component.html","webpack:///src/app/pages/game/value-gauge.component.ts","webpack:///src/app/pages/title-screen/title-screen.component.ts","webpack:///src/app/pages/title-screen/title-screen.component.html","webpack:///src/app/shared/d3.service.ts","webpack:///src/app/shared/shared.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","TitleScreenComponent","GameComponent","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","shared","isLoading","ready","subscribe","value","trigger","transition","style","opacity","animate","ANIMATION_TIMING","AppModule","SharedService","D3Service","BrowserModule","BrowserAnimationsModule","HttpClientModule","GameModule","topDialog","bottomDialog","DATA_KEY_VERSION","DATA_KEY_SHOWREPORT","DATA_SEPARATOR","DATA_KEY_STRATEGIES","ROUND_BASE","ANIMATION_DURATION_PREVIOUS_CARDS_MS","ANIMATION_TIMING_PREVIOUS_CARDS_MS","ANIMATION_EASING","sum","arr","reduce","a","b","clamp","num","min","max","processQueue","queue","length","step","shift","setTimeout","route","router","animationDirection","currentCardsTrigger","enableGoToPrevious","inFeedbackPhase","performanceIndicators","organisationalAttributes","playedScenarios","playedStrategies","previousCardsTrigger","previousStrategyCards","ribbons","roundStarting","scenarioTrigger","showGameOverDialog","showReport","showScenario","strategyCards","_subscriptions","Array","resetState","Object","values","indicators","filter","i","type","readParams","push","events","pipe","evt","NavigationEnd","forEach","s","unsubscribe","rawRound","settings","rounds","roundsLeft","scenario","strategies","index","console","log","initScenarios","initIndicators","initRibbons","initPreviousStrategyCards","initStrategyCards","ANIMATION_DURATION_MS","gameOver","undefined","sid","locked","flipped","scenarios","firstScenario","map","iid","indicator","initialValue","previousValue","effect","effects","r","previousScenario","event","updateUrl","strategy","text","t","confirm","showStrategyFeedback","executeStrategy","startOver","navigate","stopPropagation","goBack","version","_encodeIds","slice","snapshot","params","currentRound","round","_decodeIds","startRound","list","join","split","getText","goToPreviousRound","ANIMATION_TIMING_DELAYED","state","transform","PERSPECTIVE","CommonModule","MatProgressSpinnerModule","MatTooltipModule","RibbonComponent","StrategyCardComponent","ValueGaugeComponent","title","ANIMATION_DURATION_WITH_DELAY","description","buttonLabel","buttonLabelLocked","titleBack","descriptionBack","disabled","cardLocked","EventEmitter","backFlipTrigger","frontFlipTrigger","_flipped","emit","toggleLocked","range","valueFraction","isDot","_calcDotPercentage","previousValueFraction","fraction","margin","d3","ANIMATION_DURATION","DEFAULT_LOCALE","SETTINGS_URL","TEXTS_URL","http","locale","error","BehaviorSubject","loadData","forkJoin","get","d","processSettings","texts","_","next","processJsonList","data","dict","LOCALE_ID","environment","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, \n         RouterModule } from '@angular/router';\n\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameComponent } from './pages/game';\n\nconst routes: Routes = [\n  { path: '', \n    component: TitleScreenComponent },\n  { path: 'start', \n    component: TitleScreenComponent },\n  { path: 'game', \n    component: GameComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div *ngIf=\"isLoading\"\n     class=\"loading\"\n     @fadeInOut>\n</div>\n<div *ngIf=\"!isLoading\"\n     class=\"content\"\n     @fadeInOut>\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\nimport { trigger,\n         style,\n         animate,\n         transition } from '@angular/animations';\n\nimport { ANIMATION_TIMING,\n         SharedService} from './shared/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class AppComponent {\n  public isLoading: boolean = true;\n\n  constructor(\n    private shared: SharedService\n  ) {\n    this.shared.ready.subscribe(value => {\n      this.isLoading = !value;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameModule } from './pages/game';\nimport { SharedService, \n         D3Service } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GameModule\n  ],\n  providers: [\n    SharedService, \n    D3Service\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<div id=\"grid\"\n     [class.showIndicators]=\"roundStarting || inFeedbackPhase\"\n     @fadeInOut>\n\n  <section id=\"performanceIndicators\">\n\n    <app-value-gauge *ngFor=\"let indicator of performanceIndicators\"\n                     type=\"bar\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section id=\"previousStrategyCards\"\n           (click)=\"goToPreviousRound($event)\"\n           [@strategyCards]=\"previousCardsTrigger\">\n\n    <!-- @previousCardsFade]=\"showLoadStrategyCardsDialog ? 'faded' : 'normal'\" -->\n\n    <app-strategy-card *ngFor=\"let card of previousStrategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"true\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section id=\"strategyCards\"\n           [@strategyCards]=\"currentCardsTrigger\">\n\n    <app-strategy-card *ngFor=\"let card of strategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"inFeedbackPhase\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section *ngIf=\"showGameOverDialog\"\n           id=\"middleDialog\"\n           @fadeInOut>\n\n    <button type=\"button\"\n            (click)=\"startOver()\"\n            [innerHTML]=\"t('Start a New Game')\">\n    </button>\n\n  </section>\n\n  <!-- <section *ngIf=\"showLoadStrategyCardsDialog\"\n           id=\"loadStrategyCardsDialog\"\n           @fadeInOut>\n\n    <button *ngIf=\"!gameOver\"\n            type=\"button\"\n            (click)=\"loadStrategyCards()\"\n            [innerHTML]=\"t('Show Available Strategies')\">\n    </button>\n\n    <button *ngIf=\"gameOver\"\n            type=\"button\"\n            (click)=\"startOver()\"\n            [innerHTML]=\"t('Start a New Game')\">\n    </button>\n\n  </section> -->\n\n  <section id=\"scenario\">\n\n    <div id=\"roundIndicator\">\n      <mat-progress-spinner color=\"white\"\n                            mode=\"determinate\"\n                            [value]=\"roundsUsedPercentage\">\n      </mat-progress-spinner>\n      <div class=\"roundText\">\n        <span class=\"roundText-current\">{{ round }}</span>\n        <span class=\"roundText-slash\">/</span>\n        <span class=\"roundText-last\">{{ lastRound }}</span>\n      </div>\n    </div>\n\n    <div id=\"scenarioContent\"\n         [@scenario]=\"scenarioTrigger\">\n\n      <h1 [innerHTML]=\"t(scenario?.title)\"></h1>\n      \n      <div class=\"description\"\n          [innerHTML]=\"t(scenario?.description)\"></div>\n\n    </div>\n\n  </section>\n\n  <section *ngIf=\"topDialog\"\n           id=\"topDialog\"\n           @fadeInOut>\n\n    <button type=\"button\"\n            (click)=\"topDialog.confirm()\"\n            [innerHTML]=\"t(topDialog.text)\">\n    </button>\n\n  </section>\n\n  <section id=\"organisationalAttributes\">\n\n    <app-value-gauge *ngFor=\"let indicator of organisationalAttributes\"\n                     type=\"dot\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section id=\"ribbons\">\n\n    <app-ribbon *ngFor=\"let ribbon of ribbons; index as i\"\n                [title]=\"ribbon.title\"\n                [matTooltip]=\"t(ribbon.description)\"\n                [style.top]=\"getRibbonTop(i)\"\n                @ribbon></app-ribbon>\n\n  </section>\n\n  <section *ngIf=\"bottomDialog\"\n           id=\"bottomDialog\"\n           @fadeInOut>\n\n    <button type=\"button\"\n            (click)=\"bottomDialog.confirm()\"\n            [innerHTML]=\"t(bottomDialog.text)\">\n    </button>\n\n  </section>\n\n</div>\n\n<!-- <div *ngIf=\"gameOver\"\n     (click)=\"modalClick($event)\"\n     class=\"modal\"></div> -->","import { \n  Component, \n  OnDestroy,\n  OnInit \n} from '@angular/core';\nimport { \n  ActivatedRoute,\n  NavigationEnd,\n  Router \n} from '@angular/router';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { \n  ANIMATION_DURATION_MS,\n  ANIMATION_EASING,\n  ANIMATION_TIMING,\n  ANIMATION_TIMING_DELAYED,\n  PERSPECTIVE,\n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  SharedService,\n  Strategy,\n} from '../../shared';\nimport { ResultChartData } from './result-chart.component';\n\n\n// See startRound()\ntype AnimationDirection = 'backward' | 'forward';\ntype AnimationState = 'current-enter' | 'current' | 'current-noTransition' | 'previous' | 'previous-noTransition' | 'previous-leave';\ntype QueueStep = number | (() => void);\ntype Queue = QueueStep[];\n\nconst DATA_KEY_VERSION = 'v';\nconst DATA_KEY_SHOWREPORT = 'r';\nconst DATA_SEPARATOR = ',';\nconst DATA_KEY_STRATEGIES = 's';\nconst ROUND_BASE = 1;\n\nconst ANIMATION_DURATION_PREVIOUS_CARDS_MS = 450;\nconst ANIMATION_TIMING_PREVIOUS_CARDS_MS = `${ANIMATION_DURATION_PREVIOUS_CARDS_MS}ms ${ANIMATION_EASING}`;\n\n/*\n * For convenience\n */\nconst sum = function sum(arr: Array<number>): number {\n  return arr.reduce((a, b) => a + b, 0);\n}\nconst clamp = function clamp(num: number, min: number = null, max: number = null): number {\n  return num <= min ? min : num >= max ? max : num;\n}\nconst processQueue = function processQueue(queue: Queue) {\n  if (queue.length < 1)\n    return;\n\n  const step = queue.shift();\n\n  if (typeof step === 'number') {\n    setTimeout(() => processQueue(queue), step);\n  } else {\n    step();\n    processQueue(queue);\n  }\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        // We add a delay to allow for the :enter animation to finish first\n        // when switching subcategories\n        animate(ANIMATION_TIMING_DELAYED, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n    trigger('strategyCards', [\n      state('current-enter',\n        style({\n          opacity: 0,\n          transform: 'translateY(60vh)'\n        }),\n      ),\n      state('current, current-noTransition',\n        style({\n          opacity: 1,\n          transform: 'none'\n        }),\n      ),\n      state('previous, previous-noTransition',\n        style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        })\n      ),\n      state('previous-leave',\n        style({\n          opacity: 0.0,\n          transform: 'translateY(-5rem) scale(0.8)',\n        })\n      ),\n      transition('current-enter <=> current, current <=> previous, previous <=> previous-leave', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ]),\n    ]),\n    trigger('previousCards', [\n      state('current',\n        style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        })\n      ),\n      state('previous',\n        style({\n          opacity: 0.0,\n          transform: 'translateY(-5rem) scale(0.8)',\n        })\n      ),\n      state('next',\n        style({\n          opacity: 0.0,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        })\n      ),\n      transition('current <=> previous', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ]),\n    ]),\n    trigger('previousCardsFade', [\n      state('faded', style({\n        opacity: 0.15\n      })),\n      state('normal', style({\n        opacity: 0.3\n      })),\n      transition('normal <=> faded', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ])\n    ]),\n    trigger('ribbon', [\n      transition(':enter', [\n        style({\n          transform: 'scale(0)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING, style({\n          transform: 'scale(1)'\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          transform: 'scale(1)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING, style({\n          transform: 'scale(0)'\n        })),\n      ])\n    ]),\n    trigger('scenario', [\n      state('current',\n        style({\n          opacity: 1,\n          transform: `${PERSPECTIVE}`,\n        })\n      ),\n      state('previous',\n        style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, 15vh, -400px)`,\n        })\n      ),\n      state('current-enter',\n        style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, -25vh, 500px)`\n        })\n      ),\n      transition('current <=> *', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ]),\n    ]),\n  ],\n})\nexport class GameComponent implements OnDestroy, OnInit {\n\n  animationDirection: AnimationDirection = 'forward';\n  bottomDialog: {\n    text: string,\n    confirm: () => void\n  };\n  currentCardsTrigger: AnimationState = 'current-enter';\n  enableGoToPrevious: boolean = false;\n  inFeedbackPhase: boolean = false;\n  performanceIndicators: Indicator[] = [];\n  organisationalAttributes: Indicator[] = [];\n  playedScenarios: Scenario[] = [];\n  playedStrategies: Strategy[] = [];\n  previousCardsTrigger: AnimationState = 'current-enter';\n  previousStrategyCards: Strategy[] = [];\n  ribbons: Ribbon[] = [];\n  roundStarting: boolean = false;\n  scenarioTrigger: AnimationState = 'current-enter';\n  showGameOverDialog: boolean = false;\n  showReport: boolean = false;\n  showScenario: boolean = false;\n  strategyCards: Strategy[] = [];\n  topDialog: {\n    text: string,\n    confirm: () => void\n  };\n\n  private _subscriptions = new Array<Subscription>();\n\n  constructor(\n    private route:     ActivatedRoute,\n    private router:    Router,\n    private shared:    SharedService\n  ) {\n    this.resetState();\n    this.performanceIndicators = Object.values(this.shared.indicators).filter(i => i.type === 'performance');\n    this.organisationalAttributes = Object.values(this.shared.indicators).filter(i => i.type === 'organisation');\n  }\n\n  ngOnInit(): void {\n    this.readParams();\n    // We need to explicitly read the params whenever navigating\n    // as onInit won't be called while we stay on the same page\n    this._subscriptions.push(\n      this.router.events.pipe(\n        filter(evt => evt instanceof NavigationEnd)\n      ).subscribe(() => this.readParams())\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n\n  /**************************************\n   * GETTERS                            *\n   **************************************/\n\n  /*\n   * Note that round is ROUND_BASE-based (= 1)\n   */\n  get round(): number {\n    return this.rawRound + ROUND_BASE;\n  }\n\n  get lastRound(): number {\n    return this.shared.settings.rounds;\n  }\n\n  /*\n   * The absolute round without ROUND_BASE\n   */\n  get rawRound(): number {\n    return this.playedStrategies.length;\n  }\n\n  get isFirstRound(): boolean {\n    return this.rawRound === 0;\n  }\n  \n  get roundsLeft(): number {\n    return this.shared.settings.rounds - this.rawRound;\n  }\n\n  get roundsUsedPercentage(): number {\n    return (this.rawRound + 1) / this.shared.settings.rounds * 100;\n  }\n\n  get gameOver(): boolean {\n    return (this.roundsLeft <= 0 || !this.scenario.strategies || this.scenario.strategies.length === 0)\n           && !this.showReport;\n  }\n\n  get latestStrategy(): Strategy {\n    if (this.playedStrategies.length === 0)\n      return null;\n    return this.playedStrategies[this.playedStrategies.length - 1];\n  }\n\n  get previousScenario(): Scenario {\n    return this.playedScenarios.length > 1 ? \n           this.playedScenarios[this.playedScenarios.length - 2] :\n           null;\n  }\n\n\n  get scenario(): Scenario {\n    return this.playedScenarios[this.playedScenarios.length - 1];\n  }\n\n  /*\n   * Get the top position of the ribbon at the given index\n   */\n  getRibbonTop(index: number): string {\n    if (this.ribbons.length === 0)\n      return '0%';\n    // NB. Match last measurement to ribbon height\n    return `calc(${index} / ${this.ribbons.length} * (100% - 11.6979592rem))`;\n  }\n\n\n  /**************************************\n   * VALUE INITIALISATION               *\n   **************************************/\n\n  /*\n   * Perform a number of steps at the start of the round with \n   * delays in between them.\n   */\n  startRound(): void {\n\n    let queue: Queue;\n\n    console.log(this.animationDirection);\n    \n    if (this.animationDirection === 'backward')\n      queue = [\n        () => this.resetState(),\n        // This sets a class of the same name, which highlights indicators\n        () => this.roundStarting = true,\n        225,\n        () => this.currentCardsTrigger = 'current-enter',\n        () => this.previousCardsTrigger = 'current',\n        () => this.scenarioTrigger = 'current-enter',\n        ANIMATION_DURATION_PREVIOUS_CARDS_MS,\n        () => this.initScenarios(),\n        () => this.scenarioTrigger = 'previous',\n        100,\n        () => this.scenarioTrigger = 'current',\n        () => this.initIndicators(),\n        () => this.initRibbons(),\n        () => {\n          this.initPreviousStrategyCards();\n          this.initStrategyCards();\n          this.previousCardsTrigger = 'previous-leave';\n          this.currentCardsTrigger = 'current-noTransition';\n        },\n        225,\n        () => this.previousCardsTrigger = 'previous',\n        1000,\n        () => this.roundStarting = false\n      ];\n    else\n      queue = [\n        // NB. This unflips the card just played, so we must wait for that\n        () => this.resetState(),\n        3 * ANIMATION_DURATION_MS,\n        // This sets a class of the same name, which highlights indicators\n        () => this.roundStarting = true,\n        () => this.currentCardsTrigger = 'previous',\n        () => this.previousCardsTrigger = 'previous-leave',\n        () => this.scenarioTrigger = 'previous',\n        ANIMATION_DURATION_PREVIOUS_CARDS_MS,\n        () => {\n          this.initScenarios();\n          this.scenarioTrigger = 'current-enter';\n        },\n        () => this.scenarioTrigger = 'current',\n        ANIMATION_DURATION_PREVIOUS_CARDS_MS,\n        () => this.initIndicators(),\n        () => this.initRibbons(),\n        1500,\n        () => {\n          if (this.gameOver)\n            this.showGameOverDialog = true;\n          else {\n            this.initPreviousStrategyCards();\n            this.initStrategyCards();\n            this.previousCardsTrigger = 'previous-noTransition';\n            this.currentCardsTrigger = 'current-enter';\n          }\n        },\n        225,\n        () => {\n          if (!this.gameOver)\n            this.currentCardsTrigger = 'current';\n        },\n        1000,\n        () => this.roundStarting = false\n      ];\n\n    processQueue(queue);\n\n  }\n\n  resetState(): void {\n    this.bottomDialog = undefined;\n    this.enableGoToPrevious = false;\n    this.inFeedbackPhase = false;\n    this.roundStarting = false;\n    this.showGameOverDialog = false;\n    this.showScenario = false;\n    this.showReport = false;\n    this.topDialog = undefined;\n\n    // Set the correct flipped/locked states for strategies\n    for (const sid in this.shared.strategies) {\n      const s = this.shared.strategies[sid];\n      s.locked = s.flipped = false;\n      // if (!this.playedStrategies.includes(s))\n      //   s.locked = s.flipped = false;\n      // else\n      //   s.locked = s.flipped = true;\n    }\n  }\n\n  initScenarios(): void {\n    const scenarios = [this.shared.firstScenario];\n    this.playedStrategies.map(s => \n      scenarios.push(this.shared.scenarios[s.scenario])\n    );\n    this.playedScenarios = scenarios;\n  }\n\n  initIndicators(): void {\n\n    for (const iid in this.shared.indicators) {\n\n      // Calc values based on the effects of all played scenarios and strategies\n      const indicator = this.shared.indicators[iid];\n\n      let value = indicator.initialValue ?? 0,\n          previousValue = indicator.initialValue ?? 0;\n      \n      this.playedScenarios.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedScenarios.length - 1)\n          previousValue += effect;\n      });\n      this.playedStrategies.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedStrategies.length - 1)\n          previousValue += effect;\n      });\n\n      indicator.value = value;\n      indicator.previousValue = previousValue;\n    }\n  }\n\n  initRibbons(): void {\n    const ribbons = [];\n    this.playedStrategies\n      .filter(s => s.ribbons?.length > 0)\n      .forEach(s => s.ribbons.forEach(r => \n        ribbons.push(this.shared.ribbons[r])  \n      ));\n    this.ribbons = ribbons;\n  }\n\n  initPreviousStrategyCards(): void {\n    this.previousStrategyCards = (this.previousScenario?.strategies ?? []).map(s => this.shared.strategies[s]);\n  }\n\n  initStrategyCards(): void {\n    this.strategyCards = (this.scenario.strategies ?? []).map(s => this.shared.strategies[s]);\n    this.enableGoToPrevious = true;\n  }\n\n  /**************************************\n   * USER ACTIONS                       *\n   **************************************/\n\n  goToPreviousRound(event?: Event): void {\n    // Prevent clicks when we are still waiting for this round's strategies\n    if (!this.enableGoToPrevious)\n      return;\n\n    // True here means we go back\n    this.updateUrl(true);\n  }\n\n\n  loadStrategyCards(): void {\n    setTimeout(() => this.initStrategyCards(), ANIMATION_DURATION_MS);\n  }\n\n  /*\n   * Selecting a strategy goes in three steps:\n   * 1. Lock the card => onCardLocked\n   * 2. Confirm => showStrategyFeedback\n   * 3. Go to next round => executeStrategy => startRound\n   */\n  onCardLocked(strategy: Strategy): void {\n\n    if (this.inFeedbackPhase)\n      return;\n\n    if (!strategy.locked) {\n      // Only one strategy can be locked at the same time\n      this.strategyCards.forEach(s => s.locked = false);\n      strategy.locked = true;\n\n      this.bottomDialog = {\n        text: this.t('Execute selected strategy'),\n        confirm: () => this.showStrategyFeedback(strategy)\n      };\n\n    } else {\n      strategy.locked = false;\n      this.bottomDialog = undefined;\n    }\n     \n  }\n\n  showStrategyFeedback(strategy: Strategy): void {\n\n    const queue: Queue = [\n      () => {\n        strategy.flipped = true;\n        // This disables further selection of strategies\n        this.inFeedbackPhase = true;\n        this.bottomDialog = undefined;\n        this.playedStrategies.push(strategy);\n        // Update indicators (nb. the next scenario doesn't affect these yet)\n      },\n      225,\n      () => this.initIndicators(),\n      775,\n      () => this.scenarioTrigger = 'previous',\n      1000,\n      () => this.topDialog = {\n        text: this.t('Start next round'),\n        confirm: () => this.executeStrategy(strategy)\n      }\n    ];\n\n    processQueue(queue);\n\n  }\n\n  executeStrategy(strategy: Strategy): void {\n    this.updateUrl();\n  }\n\n  modalClick(event?: Event): void {\n    this.startOver(event);\n  }\n\n  startOver(event?: Event): void {\n    // We are just navigating to the title screen\n    this.router.navigate(['/']);\n    // To disable background click\n    event?.stopPropagation();\n  }\n\n  /**************************************\n   * URL PARAMS                         *\n   **************************************/\n\n  public updateUrl(goBack: boolean = false): void {\n    // We use router to save the game data between sessions\n    this.router.navigate([{\n      [DATA_KEY_VERSION]:    this.shared.settings.version,\n      [DATA_KEY_STRATEGIES]: this._encodeIds(goBack && this.playedStrategies.length > 0 ? \n                                             this.playedStrategies.slice(0, -1) : \n                                             this.playedStrategies),\n      [DATA_KEY_SHOWREPORT]: this.showReport ? 1 : 0,\n    }]);\n  }\n\n  public readParams(): void {\n    // Only load purchases from route data if the application versions match\n    // Otherwise reset the state to handle the going back to an url without params\n    if (this.route.snapshot.params?.[DATA_KEY_VERSION] && \n        this.route.snapshot.params[DATA_KEY_VERSION] == this.shared.settings.version) {\n\n      // Save current round here, so we can check which direction to animate to\n      const currentRound = this.round;\n\n      if (this.route.snapshot.params[DATA_KEY_STRATEGIES])\n        this.playedStrategies = this._decodeIds(this.route.snapshot.params[DATA_KEY_STRATEGIES]);\n      else\n        this.playedStrategies = [];\n\n      // NB. This only counts the round number, so if we were to edit the url\n      // manually, we would get an inconsistent transition\n      this.animationDirection = this.round < currentRound ? 'backward' : 'forward';\n      \n      if (this.route.snapshot.params[DATA_KEY_SHOWREPORT] && \n          this.route.snapshot.params[DATA_KEY_SHOWREPORT] == 1)\n        this.showReport = true;\n      else\n        this.showReport = false;\n    }\n    // This resets the screen\n    this.startRound();\n  }\n\n  private _encodeIds(list: Strategy[]): string {\n    return list.map(s => s.id).join(DATA_SEPARATOR);\n  }\n  private _decodeIds(text: string): Strategy[] {\n    return text.split(DATA_SEPARATOR).map(s => this.shared.strategies[s]);\n  }\n\n  /**************************************\n   * TEXT LOCALISATION                  *\n   **************************************/\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  public t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n\n  // /*\n  //  * Get data for the resultChart component to use\n  //  */\n  // public get resultChartData(): ResultChartData {\n  //   throw new Error(\"Not implemented\");\n  //   const data = new Array<any>();\n  //   const purchases = this.purchasesAndPassedRounds;\n\n  //   // NB. This code is partly copied from getAccumulatedReturns\n  //   let balance = this.shared.settings.balance;\n  //   for (let i = 0; i <= purchases.length; i++) {\n  //     const returns = this.getTotalReturns(purchases.slice(0, i));\n  //     balance += returns;\n  //     balance -= i === 0 ? 0 : purchases[i - 1].price;\n  //     data.push({\n  //       round:      i + ROUND_BASE,\n  //       balance:    balance,\n  //       returns:    returns,\n  //       investment: this.t(i === 0 ? 'Start' : (purchases[i - 1] instanceof NullInvestment ? 'Pass' : purchases[i - 1].title))\n  //     });\n  //   }\n  //   return data;\n  // }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { GameComponent } from './game.component';\nimport { RibbonComponent } from './ribbon.component';\nimport { StrategyCardComponent } from './strategy-card.component';\nimport { ValueGaugeComponent } from './value-gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ],\n  exports: [\n    GameComponent,\n  ],\n  declarations: [\n    GameComponent,\n    RibbonComponent,\n    StrategyCardComponent,\n    ValueGaugeComponent\n  ],\n})\nexport class GameModule {}","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-ribbon',\n  template: `<label>{{ t(title) }}</label>`,\n  styleUrls: ['./ribbon.component.sass']\n})\nexport class RibbonComponent {\n\n  @Input() title: string = '';\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { \n  ANIMATION_DURATION_MS,\n  PERSPECTIVE,\n  LocalizedString,\n  SharedService\n} from '../../shared';\n\nconst ANIMATION_DURATION_WITH_DELAY = `${ANIMATION_DURATION_MS}ms ${ANIMATION_DURATION_MS}ms`;\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-strategy-card',\n  templateUrl: './strategy-card.component.html',\n  styleUrls: ['./strategy-card.component.sass'],\n  animations: [\n    trigger('flip', [\n      state('visible', style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        })\n      ),\n      state('front-hidden', style({\n          transform: `${PERSPECTIVE} rotateY(-90deg)`\n        })\n      ),\n      state('back-hidden', style({\n          transform: `${PERSPECTIVE} rotateY(90deg)`\n        })\n      ),\n      transition('visible => front-hidden, visible => back-hidden', [\n        animate(ANIMATION_DURATION_MS),\n      ]),\n      transition('front-hidden => visible, back-hidden => visible', [\n        animate(ANIMATION_DURATION_WITH_DELAY),\n      ]),\n    ]),\n  ]\n})\nexport class StrategyCardComponent {\n\n  @Input() id: string = null;\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() buttonLabel: string = 'Lock This Strategy';\n  @Input() buttonLabelLocked: string = 'Strategy Locked';\n  @Input() titleBack: string = 'Feedback';\n  @Input() descriptionBack: string = '';\n  @Input() disabled: boolean = false;\n  @Input()\n  set flipped(value: boolean) {\n\n    if (this._flipped == value)\n      return;\n\n    this._flipped = value;\n\n    // Handle triggers for transitions here\n    if (this._flipped) {\n      this.backFlipTrigger = 'visible';\n      this.frontFlipTrigger = 'front-hidden';\n    } else {\n      this.backFlipTrigger = 'back-hidden';\n      this.frontFlipTrigger = 'visible';\n    }\n\n  };\n  get flipped(): boolean {\n    return this._flipped;\n  }\n  @Input() locked: boolean = false;\n\n  @Output() cardLocked = new EventEmitter<boolean>();\n\n  public backFlipTrigger: string = 'back-hidden';\n  public frontFlipTrigger: string = 'visible';\n  private _flipped: boolean = false;\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  toggleLocked(): void {\n    this.cardLocked.emit(!this.locked);\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","<section class=\"card front\"\n         [class.disabled]=\"disabled\"\n         [class.locked]=\"locked\"\n         [@flip]=\"frontFlipTrigger\">\n\n  <div class=\"content\">\n    <div class=\"description\"\n        [innerHTML]=\"t(description)\"></div>\n  </div>\n  \n  <label>\n    <span class=\"titleText\"\n          [innerHTML]=\"t(title)\"></span>\n  </label>\n\n  <button type=\"button\"\n          class=\"bottomButton\"\n          [disabled]=\"disabled\"\n          (click)=\"toggleLocked()\"\n          [innerHTML]=\"t(locked ? buttonLabelLocked : buttonLabel)\">\n  </button>\n  \n\n</section>\n\n<section class=\"card back\"\n         [@flip]=\"backFlipTrigger\">\n\n  <div class=\"content\">\n    <h3>\n      <span class=\"titleText\"\n            [innerHTML]=\"t(titleBack)\"></span>\n    </h3>\n    <div class=\"description\"\n        [innerHTML]=\"t(descriptionBack)\"></div>\n  </div>\n\n</section>","<div class=\"container\"\n     [class.bar]=\"isBar\"\n     [class.dot]=\"isDot\">\n\n  <div class=\"content\">\n    <div *ngIf=\"previousValue != null\"\n         class=\"previousValue\"\n         [style.left]=\"previousValueLeft\"></div>\n    <div *ngIf=\"isBar\"\n         class=\"valueBar\"\n         [style.width]=\"valueBarWidth\"></div>\n    <!-- <div *ngIf=\"isBar\"\n         class=\"valueBar valueChange\"\n         [class.negative]=\"valueChange &lt; 0\"\n         [style.left]=\"previousValueBarLeft\"\n         [style.width]=\"valueChangeWidth\"></div>\n    <div *ngIf=\"isDot\"\n         class=\"valueDot previousValue\"\n         [style.left]=\"previousValueDotLeft\"></div> -->\n    <div *ngIf=\"isDot\"\n         class=\"valueDot\"\n         [style.left]=\"valueDotLeft\"></div>\n  </div>\n\n  <label *ngIf=\"titleTop\"\n         class=\"titleTop\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleTop)\"></span>\n  </label>\n\n  <label *ngIf=\"titleBottom\"\n         class=\"titleBottom\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleBottom)\"></span>\n  </label>\n\n</div>","import { \n  Component, \n  Input\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\nexport type ValueGaugeType = 'bar' | 'dot';\n\n\n/*\n * Show indicator values as either bars or dots on an axis.\n */\n\n@Component({\n  selector: 'app-value-gauge',\n  templateUrl: './value-gauge.component.html',\n  styleUrls: ['./value-gauge.component.sass']\n})\nexport class ValueGaugeComponent {\n\n  @Input() max: number = 10;\n  @Input() min: number = 0;\n  @Input() previousValue: number = undefined;\n  @Input() type: ValueGaugeType = 'bar';\n  @Input() titleBottom: string;\n  @Input() titleTop: string;\n  @Input() value: number = 0;\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  get isDot(): boolean {\n    return this.type === 'dot';\n  }\n\n  get isBar(): boolean {\n    return this.type === 'bar';\n  }\n\n  get valueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.value - this.min) / this.range;\n  }\n\n  get previousValueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.previousValue - this.min) / this.range;\n  }\n\n  get range(): number {\n    return this.max - this.min;\n  }\n\n  get valueBarWidth(): string {\n    return `${this.valueFraction * 100}%`;\n  }\n\n  get previousValueLeft(): string {\n    return this.isDot ? \n      this._calcDotPercentage(this.previousValueFraction) :\n      `${this.previousValueFraction * 100}%`;\n  }\n\n  // get valueChange(): number {\n  //   return this.valueFraction - this.previousValueFraction;\n  // }\n\n  // get valueChangeWidth(): string {\n  //   return `${Math.abs(this.valueChange) * 100}%`;\n  // }\n\n  get valueDotLeft(): string {\n    return this._calcDotPercentage(this.valueFraction);\n  }\n\n  // get previousValueDotLeft(): string {\n  //   const margin = 10;\n  //   return `${margin + this.valueFraction * (100 - 2 * margin)}%`;\n  // }\n\n  _calcDotPercentage(fraction: number): string {\n    const margin = 10;\n    return `${margin + fraction * (100 - 2 * margin)}%`;\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","import {\n  Component,\n  OnInit \n} from '@angular/core';\nimport { SharedService } from '../../shared';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.sass']\n})\nexport class TitleScreenComponent implements OnInit {\n\n  constructor(\n    private shared: SharedService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public t(text: string): string {\n    return this.shared.getText(text);\n  }\n}\n","<div id=\"titleAndIntro\">\n  <h1 [innerHTML]=\"t('The Agile Quest Game')\"></h1>\n\n  <div [innerHTML]=\"t('TITLE_SCREEN_INTRO')\"></div>\n  \n  <button routerLink=\"game\" \n          [innerHTML]=\"t('Start game')\"></button>\n</div>\n\n<div id=\"authors\" \n     [innerHTML]=\"t('AUTHORS')\"></div>","import { Injectable } from '@angular/core';\n\nimport * as d3 from 'd3';\n\n/*\n * A basic wrapper around d3.js\n * To access the d3 namespace, use D3Service.d3\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n  public d3: any = d3;\n\n  constructor(\n  ) {\n  }\n}\n","import { \n  EventEmitter,\n  Inject,\n  Injectable,\n  LOCALE_ID \n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { \n  BehaviorSubject,\n  forkJoin \n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { \n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  Settings,\n  Strategy,\n  Texts \n} from './shared.types';\n\n\nexport const ANIMATION_DURATION_MS: number = 225;\nexport const ANIMATION_DURATION: string = ANIMATION_DURATION_MS + 'ms';\nexport const ANIMATION_EASING: string = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const ANIMATION_TIMING: string = `${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const ANIMATION_TIMING_DELAYED: string = `${ANIMATION_DURATION} ${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const DEFAULT_LOCALE = 'en-US';\nexport const PERSPECTIVE: string = 'perspective(1000px)';\nconst SETTINGS_URL = 'assets/data/settings.json';\nconst TEXTS_URL = 'assets/data/texts.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  error = new EventEmitter<string>();\n  firstScenario: Scenario;\n  indicators: {[id: string]: Indicator} = {};\n  ready = new BehaviorSubject<boolean>(false);\n  ribbons: {[id: string]: Ribbon} = {};\n  scenarios: {[id: string]: Scenario} = {};\n  settings: {\n    version: number,\n    rounds: number,\n  };\n  strategies: {[id: string]: Strategy} = {};\n  texts: Texts;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(LOCALE_ID) public locale: string\n  ) {\n    this.loadData();\n  }\n\n  public loadData(): void {\n    forkJoin([\n      this.http.get<Settings>(SETTINGS_URL).pipe(\n        map(d => {\n          this.processSettings(d);\n          return true;\n        })\n      ), \n      this.http.get<Texts>(TEXTS_URL).pipe(\n        map(d => {\n          this.texts = d;\n          return true;\n        })\n      ), \n    ]).subscribe(_ => this.ready.next(true));\n  }\n\n  /*\n   * Process the whole settings json object\n   */\n  public processSettings(settings: Settings): void {\n    this.settings = {\n      version: settings.version,\n      rounds:  settings.rounds\n    };\n\n    for (const list of ['indicators', 'ribbons', 'scenarios', 'strategies'])\n      this[list] = this.processJsonList(settings[list]);\n\n    this.firstScenario = settings.scenarios[0];\n  }\n\n  /*\n   * Create proper objects from settings.json sublists\n   */\n  public processJsonList(data: Array<any>): {[id: string]: any} {\n    const dict: {[id: string]: any} = {};\n    data.forEach(d => \n      dict[d.id] = d\n    );\n    return dict;\n  }\n\n  /*\n   * Return the prompt text in current locale or the text itself if that's not available.\n   * If text is a localized string, select the correct localized version or use the default.\n   * Note that if the text is to contain any HTML markup, it should be used as a bound\n   * property, i.e., <span [innerHTML]=\"shared.getText('Text')\"></span>. It will be \n   * sanitized by Angular but basic formatting and links are allowed, at least.\n   */\n  public getText(text: string | LocalizedString): string {\n    if (text == null)\n      return \"\";\n    else if (typeof text === \"string\")\n      return this.texts[text]?.[this.locale] ?? text;\n    else\n      return text[this.locale] ?? text[DEFAULT_LOCALE];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}