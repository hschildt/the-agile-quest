{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/pages/game/game.component.html","webpack:///src/app/pages/game/game.component.ts","webpack:///src/app/pages/game/game.module.ts","webpack:///src/app/pages/game/ribbon.component.ts","webpack:///src/app/pages/game/strategy-card.component.html","webpack:///src/app/pages/game/strategy-card.component.ts","webpack:///src/app/pages/game/value-gauge.component.html","webpack:///src/app/pages/game/value-gauge.component.ts","webpack:///src/app/pages/title-screen/title-screen.component.ts","webpack:///src/app/pages/title-screen/title-screen.component.html","webpack:///src/app/shared/d3.service.ts","webpack:///src/app/shared/shared.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","TitleScreenComponent","GameComponent","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","shared","isLoading","ready","subscribe","value","trigger","transition","style","opacity","animate","ANIMATION_TIMING","AppModule","SharedService","D3Service","BrowserModule","BrowserAnimationsModule","HttpClientModule","GameModule","bottomDialog","DATA_KEY_VERSION","DATA_KEY_SHOWREPORT","DATA_SEPARATOR","DATA_KEY_STRATEGIES","ROUND_BASE","ANIMATION_DURATION_PREVIOUS_CARDS_MS","ANIMATION_TIMING_PREVIOUS_CARDS_MS","ANIMATION_EASING","ROUND_START_SCHEDULE_MS","hidePreviousStrategies","initIndicators","showPreviousStrategies","hideScenario","showScenario","showLoadStrategies","fadeOutIndicators","sum","arr","reduce","a","b","clamp","num","min","max","route","router","inFeedbackPhase","performanceIndicators","organisationalAttributes","playedScenarios","playedStrategies","previousStrategyCards","ribbons","roundStarting","showLoadStrategyCardsDialog","showPreviousStrategyCards","showReport","showStrategyCards","strategyCards","_subscriptions","Array","resetState","readParams","push","events","pipe","filter","evt","NavigationEnd","forEach","s","unsubscribe","rawRound","settings","rounds","length","roundsLeft","scenario","strategies","index","initScenarios","initRibbons","setTimeout","initPreviousStrategyCards","undefined","sid","includes","locked","flipped","scenarios","firstScenario","map","iid","indicator","indicators","initialValue","previousValue","i","effect","effects","Object","values","type","r","previousScenario","event","pop","updateUrl","initStrategyCards","ANIMATION_DURATION_MS","strategy","text","t","confirm","showStrategyFeedback","executeStrategy","startOver","navigate","stopPropagation","version","_encodeIds","snapshot","params","_decodeIds","startRound","list","join","split","getText","ANIMATION_TIMING_DELAYED","transform","state","PERSPECTIVE","CommonModule","MatProgressSpinnerModule","MatTooltipModule","RibbonComponent","StrategyCardComponent","ValueGaugeComponent","title","ANIMATION_DURATION_WITH_DELAY","description","buttonLabel","buttonLabelLocked","titleBack","descriptionBack","disabled","cardLocked","EventEmitter","emit","range","valueFraction","isDot","_calcDotPercentage","previousValueFraction","fraction","margin","d3","ANIMATION_DURATION","DEFAULT_LOCALE","SETTINGS_URL","TEXTS_URL","http","locale","error","BehaviorSubject","loadData","forkJoin","get","d","processSettings","texts","_","next","processJsonList","data","dict","LOCALE_ID","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, \n         RouterModule } from '@angular/router';\n\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameComponent } from './pages/game';\n\nconst routes: Routes = [\n  { path: '', \n    component: TitleScreenComponent },\n  { path: 'start', \n    component: TitleScreenComponent },\n  { path: 'game', \n    component: GameComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div *ngIf=\"isLoading\"\n     class=\"loading\"\n     @fadeInOut>\n</div>\n<div *ngIf=\"!isLoading\"\n     class=\"content\"\n     @fadeInOut>\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\nimport { trigger,\n         style,\n         animate,\n         transition } from '@angular/animations';\n\nimport { ANIMATION_TIMING,\n         SharedService} from './shared/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class AppComponent {\n  public isLoading: boolean = true;\n\n  constructor(\n    private shared: SharedService\n  ) {\n    this.shared.ready.subscribe(value => {\n      this.isLoading = !value;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameModule } from './pages/game';\nimport { SharedService, \n         D3Service } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GameModule\n  ],\n  providers: [\n    SharedService, \n    D3Service\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<div id=\"grid\"\n     [class.roundStarting]=\"roundStarting\"\n     @fadeInOut>\n\n  <section id=\"performanceIndicators\">\n\n    <app-value-gauge *ngFor=\"let indicator of performanceIndicators\"\n                     type=\"bar\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section *ngIf=\"showPreviousStrategyCards\"\n           id=\"previousStrategyCards\"\n           (click)=\"goToPreviousRound($event)\"\n           @previousCards\n           [@previousCardsFade]=\"showLoadStrategyCardsDialog ? 'faded' : 'normal'\">\n\n    <app-strategy-card *ngFor=\"let card of previousStrategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"true\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section *ngIf=\"showStrategyCards\"\n           id=\"strategyCards\"\n           @currentCards>\n\n    <app-strategy-card *ngFor=\"let card of strategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"inFeedbackPhase\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section *ngIf=\"!showStrategyCards && showLoadStrategyCardsDialog\"\n           id=\"loadStrategyCardsDialog\"\n           @fadeInOut>\n\n    <button *ngIf=\"!gameOver\"\n            type=\"button\"\n            (click)=\"loadStrategyCards()\"\n            [innerHTML]=\"t('Show Available Strategies')\">\n    </button>\n\n    <button *ngIf=\"gameOver\"\n            type=\"button\"\n            (click)=\"startOver()\"\n            [innerHTML]=\"t('Start a New Game')\">\n    </button>\n\n  </section>\n\n  <section id=\"scenario\">\n\n    <div id=\"roundIndicator\">\n      <mat-progress-spinner color=\"white\"\n                            mode=\"determinate\"\n                            [value]=\"roundsUsedPercentage\">\n      </mat-progress-spinner>\n      <div class=\"roundText\">\n        <span class=\"roundText-current\">{{ round }}</span>\n        <span class=\"roundText-slash\">/</span>\n        <span class=\"roundText-last\">{{ lastRound }}</span>\n      </div>\n    </div>\n\n    <div *ngIf=\"showScenario\"\n         id=\"scenarioContent\"\n         @scenario>\n\n      <h1 [innerHTML]=\"t(scenario.title)\"></h1>\n      \n      <div class=\"description\"\n          [innerHTML]=\"t(scenario.description)\"></div>\n\n    </div>\n\n  </section>\n\n  <section id=\"organisationalAttributes\">\n\n    <app-value-gauge *ngFor=\"let indicator of organisationalAttributes\"\n                     type=\"dot\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section id=\"ribbons\">\n\n    <app-ribbon *ngFor=\"let ribbon of ribbons; index as i\"\n                [title]=\"ribbon.title\"\n                [matTooltip]=\"t(ribbon.description)\"\n                [style.top]=\"getRibbonTop(i)\"\n                @ribbon></app-ribbon>\n\n  </section>\n\n  <section *ngIf=\"bottomDialog\"\n           id=\"bottomDialog\"\n           @fadeInOut>\n\n    <button type=\"button\"\n            (click)=\"bottomDialog.confirm()\"\n            [innerHTML]=\"t(bottomDialog.text)\">\n    </button>\n\n  </section>\n\n</div>\n\n<!-- <div *ngIf=\"gameOver\"\n     (click)=\"modalClick($event)\"\n     class=\"modal\"></div> -->","import { \n  Component, \n  OnDestroy,\n  OnInit \n} from '@angular/core';\nimport { \n  ActivatedRoute,\n  NavigationEnd,\n  Router \n} from '@angular/router';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { \n  ANIMATION_DURATION_MS,\n  ANIMATION_EASING,\n  ANIMATION_TIMING,\n  ANIMATION_TIMING_DELAYED,\n  PERSPECTIVE,\n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  Settings,\n  SharedService,\n  Strategy,\n  Texts\n} from '../../shared';\nimport { ResultChartData } from './result-chart.component';\n\nconst DATA_KEY_VERSION = 'v';\nconst DATA_KEY_SHOWREPORT = 'r';\nconst DATA_SEPARATOR = ',';\nconst DATA_KEY_STRATEGIES = 's';\nconst ROUND_BASE = 1;\n\nconst ANIMATION_DURATION_PREVIOUS_CARDS_MS = 450;\nconst ANIMATION_TIMING_PREVIOUS_CARDS_MS = `${ANIMATION_DURATION_PREVIOUS_CARDS_MS}ms ${ANIMATION_EASING}`;\n\nconst ROUND_START_SCHEDULE_MS: {[event: string]: number} = {\n  hidePreviousStrategies: 225,\n  initIndicators: 700\n}\nROUND_START_SCHEDULE_MS.showPreviousStrategies = \n  ROUND_START_SCHEDULE_MS.hidePreviousStrategies + ANIMATION_DURATION_PREVIOUS_CARDS_MS;\nROUND_START_SCHEDULE_MS.hideScenario  = \n  ROUND_START_SCHEDULE_MS.showPreviousStrategies + ANIMATION_DURATION_PREVIOUS_CARDS_MS - 125;\nROUND_START_SCHEDULE_MS.showScenario  = \n  ROUND_START_SCHEDULE_MS.hideScenario + ANIMATION_DURATION_PREVIOUS_CARDS_MS;\nROUND_START_SCHEDULE_MS.showLoadStrategies  = \n  ROUND_START_SCHEDULE_MS.showScenario + 2000;\nROUND_START_SCHEDULE_MS.fadeOutIndicators = ROUND_START_SCHEDULE_MS.showLoadStrategies;\n\n/*\n * For convenience\n */\nfunction sum(arr: Array<number>): number {\n  return arr.reduce((a, b) => a + b, 0);\n}\nfunction clamp(num: number, min: number = null, max: number = null): number {\n  return num <= min ? min : num >= max ? max : num;\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        // We add a delay to allow for the :enter animation to finish first\n        // when switching subcategories\n        animate(ANIMATION_TIMING_DELAYED, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n    trigger('currentCards', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(60vh)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 1,\n          transform: 'none'\n        })),\n      ])\n    ]),\n    trigger('previousCards', [\n      transition(':enter', [\n        style({\n          opacity: 1,\n          transform: 'none'\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0.0,\n          transform: 'translateY(-5rem) scale(0.8)',\n        })),\n      ]),\n    ]),\n    trigger('previousCardsFade', [\n      state('faded', style({\n        opacity: 0.15\n      })),\n      state('normal', style({\n        opacity: 0.3\n      })),\n      transition('normal <=> faded', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ])\n    ]),\n    trigger('ribbon', [\n      transition(':enter', [\n        style({\n          transform: 'scale(0)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING, style({\n          transform: 'scale(1)'\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          transform: 'scale(1)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING, style({\n          transform: 'scale(0)'\n        })),\n      ])\n    ]),\n    trigger('scenario', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, -25vh, 500px)`\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 1,\n          transform: `${PERSPECTIVE}`,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: `${PERSPECTIVE}`,\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, 15vh, -400px)`,\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class GameComponent implements OnDestroy, OnInit {\n\n  bottomDialog: {\n    text: string,\n    confirm: () => void\n  };\n  inFeedbackPhase: boolean = false;\n  performanceIndicators: Indicator[] = [];\n  organisationalAttributes: Indicator[] = [];\n  playedScenarios: Scenario[] = [];\n  playedStrategies: Strategy[] = [];\n  previousStrategyCards: Strategy[] = [];\n  ribbons: Ribbon[] = [];\n  roundStarting: boolean = false;\n  showLoadStrategyCardsDialog: boolean = false;\n  showPreviousStrategyCards: boolean = false;\n  showReport: boolean = false;\n  showScenario: boolean = false;\n  showStrategyCards: boolean = false;\n  strategyCards: Strategy[] = [];\n\n  private _subscriptions = new Array<Subscription>();\n\n  constructor(\n    private route:     ActivatedRoute,\n    private router:    Router,\n    private shared:    SharedService\n  ) {\n    this.resetState();\n  }\n\n  ngOnInit(): void {\n    this.readParams();\n    // We need to explicitly read the params whenever navigating\n    // as onInit won't be called while we stay on the same page\n    this._subscriptions.push(\n      this.router.events.pipe(\n        filter(evt => evt instanceof NavigationEnd)\n      ).subscribe(() => this.readParams())\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n\n  /**************************************\n   * GETTERS                            *\n   **************************************/\n\n  /*\n   * Note that round is ROUND_BASE-based (= 1)\n   */\n  get round(): number {\n    return this.rawRound + ROUND_BASE;\n  }\n\n  get lastRound(): number {\n    return this.shared.settings.rounds;\n  }\n\n  /*\n   * The absolute round without ROUND_BASE\n   */\n  get rawRound(): number {\n    return this.playedStrategies.length;\n  }\n\n  get isFirstRound(): boolean {\n    return this.rawRound === 0;\n  }\n  \n  get roundsLeft(): number {\n    return this.shared.settings.rounds - this.rawRound;\n  }\n\n  get roundsUsedPercentage(): number {\n    return (this.rawRound + 1) / this.shared.settings.rounds * 100;\n  }\n\n  get gameOver(): boolean {\n    return (this.roundsLeft <= 0 || !this.scenario.strategies || this.scenario.strategies.length === 0)\n           && !this.showReport;\n  }\n\n  get latestStrategy(): Strategy {\n    if (this.playedStrategies.length === 0)\n      return null;\n    return this.playedStrategies[this.playedStrategies.length - 1];\n  }\n\n  get previousScenario(): Scenario {\n    return this.playedScenarios.length > 1 ? \n           this.playedScenarios[this.playedScenarios.length - 2] :\n           null;\n  }\n\n\n  get scenario(): Scenario {\n    return this.playedScenarios[this.playedScenarios.length - 1];\n  }\n\n  /*\n   * Get the top position of the ribbon at the given index\n   */\n  getRibbonTop(index: number): string {\n    if (this.ribbons.length === 0)\n      return '0%';\n    // NB. Match last measurement to ribbon height\n    return `calc(${index} / ${this.ribbons.length} * (100% - 11.6979592rem))`;\n  }\n\n\n  /**************************************\n   * VALUE INITIALISATION               *\n   **************************************/\n\n  startRound(): void {\n\n    this.resetState();\n    \n    // Init different data\n    this.initScenarios();\n    this.initRibbons();\n\n    // This sets a class of the same name, which highlights indicators\n    this.roundStarting = true;\n\n    // Coordinate entry, exit and update of differenet elements\n    setTimeout(() => this.initIndicators(), ROUND_START_SCHEDULE_MS.initIndicators);\n    setTimeout(() => this.showPreviousStrategyCards = false, ROUND_START_SCHEDULE_MS.hidePreviousStrategies);\n    setTimeout(() => this.initPreviousStrategyCards(), ROUND_START_SCHEDULE_MS.showPreviousStrategies);\n    setTimeout(() => this.showScenario = false, ROUND_START_SCHEDULE_MS.hideScenario);\n    setTimeout(() => this.showScenario = true, ROUND_START_SCHEDULE_MS.showScenario);\n    setTimeout(() => this.showLoadStrategyCardsDialog = true, ROUND_START_SCHEDULE_MS.showLoadStrategies);\n    setTimeout(() => this.roundStarting = false, ROUND_START_SCHEDULE_MS.fadeOutIndicators);\n\n  }\n\n  resetState(): void {\n    this.bottomDialog = undefined;\n    this.inFeedbackPhase = false;\n    this.roundStarting = false;\n    this.showLoadStrategyCardsDialog = false;\n    this.showScenario = false;\n    this.showReport = false;\n\n    // Set the correct flipped/locked states for strategies\n    for (const sid in this.shared.strategies) {\n      const s = this.shared.strategies[sid];\n      if (!this.playedStrategies.includes(s)) {\n        s.locked = false;\n        s.flipped = false;\n      } else {\n        s.locked = true;\n        s.flipped = true;\n      }\n    }\n  }\n\n  initScenarios(): void {\n    const scenarios = [this.shared.firstScenario];\n    this.playedStrategies.map(s => \n      scenarios.push(this.shared.scenarios[s.scenario])\n    );\n    this.playedScenarios = scenarios;\n  }\n\n  initIndicators(): void {\n\n    for (const iid in this.shared.indicators) {\n\n      // Calc values based on the effects of all played scenarios and strategies\n      const indicator = this.shared.indicators[iid];\n\n      let value = indicator.initialValue ?? 0,\n          previousValue = indicator.initialValue ?? 0;\n      \n      this.playedScenarios.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedScenarios.length - 1)\n          previousValue += effect;\n      });\n      this.playedStrategies.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedStrategies.length - 1)\n          previousValue += effect;\n      });\n\n      indicator.value = value;\n      indicator.previousValue = previousValue;\n    }\n\n    this.performanceIndicators = Object.values(this.shared.indicators).filter(i => i.type === 'performance');\n    this.organisationalAttributes = Object.values(this.shared.indicators).filter(i => i.type === 'organisation');\n  }\n\n  initRibbons(): void {\n    const ribbons = [];\n    this.playedStrategies\n      .filter(s => s.ribbons?.length > 0)\n      .forEach(s => s.ribbons.forEach(r => \n        ribbons.push(this.shared.ribbons[r])  \n      ));\n    this.ribbons = ribbons;\n  }\n\n  initPreviousStrategyCards(): void {\n    this.previousStrategyCards = (this.previousScenario?.strategies ?? []).map(s => this.shared.strategies[s]);\n    this.showPreviousStrategyCards = true;\n    this.showStrategyCards = false;\n  }\n\n  initStrategyCards(): void {\n    this.strategyCards = (this.scenario.strategies ?? []).map(s => this.shared.strategies[s]);\n    this.showLoadStrategyCardsDialog = false;\n    this.showStrategyCards = true;\n  }\n\n  /**************************************\n   * USER ACTIONS                       *\n   **************************************/\n\n  goToPreviousRound(event?: Event): void {\n    this.playedStrategies.pop();\n    this.updateUrl();\n  }\n\n\n  loadStrategyCards(): void {\n    setTimeout(() => this.initStrategyCards(), ANIMATION_DURATION_MS);\n  }\n\n  /*\n   * Selecting a strategy goes in three steps:\n   * 1. Lock the card => onCardLocked\n   * 2. Confirm => showStrategyFeedback\n   * 3. Go to next round => executeStrategy => startRound\n   */\n  onCardLocked(strategy: Strategy): void {\n\n    if (this.inFeedbackPhase)\n      return;\n\n    if (!strategy.locked) {\n      // Only one strategy can be locked at the same time\n      this.strategyCards.forEach(s => s.locked = false);\n      strategy.locked = true;\n\n      this.bottomDialog = {\n        text: this.t('Execute selected strategy'),\n        confirm: () => this.showStrategyFeedback(strategy)\n      };\n\n    } else {\n      strategy.locked = false;\n      this.bottomDialog = undefined;\n    }\n     \n  }\n\n  showStrategyFeedback(strategy: Strategy): void {\n    strategy.flipped = true;\n    // This disabled further selection of strategies\n    this.inFeedbackPhase = true;\n    this.bottomDialog = {\n      text: this.t('Start next round'),\n      confirm: () => this.executeStrategy(strategy)\n    };\n  }\n\n  executeStrategy(strategy: Strategy): void {\n    this.playedStrategies.push(strategy);\n    this.updateUrl();\n  }\n\n  modalClick(event?: Event): void {\n    this.startOver(event);\n  }\n\n  startOver(event?: Event): void {\n    // We are just navigating to the title screen\n    this.router.navigate(['/']);\n    // To disable background click\n    event?.stopPropagation();\n  }\n\n  // public resetClick(event?: Event): void {\n  //   this.hideOthers(ShowableTopic.ResetConfirmation);\n  //   this.showStartOverConfirmation = true;\n  //   // To disable background click\n  //   if (event)\n  //     event.stopPropagation();\n  // }\n\n  // public cancelReset(event?: Event): void {\n  //   this.showStartOverConfirmation = false;\n  //   // To disable background click\n  //   if (event)\n  //     event.stopPropagation();\n  // }\n\n  // public startOverClick(event?: Event): void {\n  //   this.hideOthers(ShowableTopic.ResetConfirmation);\n  //   setTimeout(() => this.startOver(event), this.options.purchaseDelay);\n  // }\n\n  /**************************************\n   * URL PARAMS                         *\n   **************************************/\n\n  public updateUrl(): void {\n    // We use router to save the game data between sessions\n    this.router.navigate([{\n      [DATA_KEY_VERSION]:    this.shared.settings.version,\n      [DATA_KEY_STRATEGIES]: this._encodeIds(this.playedStrategies),\n      [DATA_KEY_SHOWREPORT]: this.showReport ? 1 : 0,\n    }]);\n  }\n\n  public readParams(): void {\n    // Only load purchases from route data if the application versions match\n    // Otherwise reset the state to handle the going back to an url without params\n    if (this.route.snapshot.params?.[DATA_KEY_VERSION] && \n        this.route.snapshot.params[DATA_KEY_VERSION] == this.shared.settings.version) {\n\n      if (this.route.snapshot.params[DATA_KEY_STRATEGIES])\n        this.playedStrategies = this._decodeIds(this.route.snapshot.params[DATA_KEY_STRATEGIES]);\n      else\n        this.playedStrategies = [];\n\n      if (this.route.snapshot.params[DATA_KEY_SHOWREPORT] && \n          this.route.snapshot.params[DATA_KEY_SHOWREPORT] == 1)\n        this.showReport = true;\n      else\n        this.showReport = false;\n    }\n    // This resets the screen\n    this.startRound();\n  }\n\n  private _encodeIds(list: Strategy[]): string {\n    return list.map(s => s.id).join(DATA_SEPARATOR);\n  }\n  private _decodeIds(text: string): Strategy[] {\n    return text.split(DATA_SEPARATOR).map(s => this.shared.strategies[s]);\n  }\n\n  /**************************************\n   * TEXT LOCALISATION                  *\n   **************************************/\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  public t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n\n  // /*\n  //  * Get data for the resultChart component to use\n  //  */\n  // public get resultChartData(): ResultChartData {\n  //   throw new Error(\"Not implemented\");\n  //   const data = new Array<any>();\n  //   const purchases = this.purchasesAndPassedRounds;\n\n  //   // NB. This code is partly copied from getAccumulatedReturns\n  //   let balance = this.shared.settings.balance;\n  //   for (let i = 0; i <= purchases.length; i++) {\n  //     const returns = this.getTotalReturns(purchases.slice(0, i));\n  //     balance += returns;\n  //     balance -= i === 0 ? 0 : purchases[i - 1].price;\n  //     data.push({\n  //       round:      i + ROUND_BASE,\n  //       balance:    balance,\n  //       returns:    returns,\n  //       investment: this.t(i === 0 ? 'Start' : (purchases[i - 1] instanceof NullInvestment ? 'Pass' : purchases[i - 1].title))\n  //     });\n  //   }\n  //   return data;\n  // }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { GameComponent } from './game.component';\nimport { RibbonComponent } from './ribbon.component';\nimport { StrategyCardComponent } from './strategy-card.component';\nimport { ValueGaugeComponent } from './value-gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ],\n  exports: [\n    GameComponent,\n  ],\n  declarations: [\n    GameComponent,\n    RibbonComponent,\n    StrategyCardComponent,\n    ValueGaugeComponent\n  ],\n})\nexport class GameModule {}","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-ribbon',\n  template: `<label>{{ t(title) }}</label>`,\n  styleUrls: ['./ribbon.component.sass']\n})\nexport class RibbonComponent {\n\n  @Input() title: string = '';\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","<section *ngIf=\"!flipped\"\n         class=\"card front\"\n         [class.disabled]=\"disabled\"\n         [class.locked]=\"locked\"\n         @frontFlip>\n\n  <div class=\"content\">\n    <div class=\"description\"\n         [innerHTML]=\"t(description)\"></div>\n  </div>\n  \n  <label>\n    <span class=\"titleText\"\n          [innerHTML]=\"t(title)\"></span>\n  </label>\n\n  <button type=\"button\"\n          class=\"bottomButton\"\n          [disabled]=\"disabled\"\n          (click)=\"toggleLocked()\"\n          [innerHTML]=\"t(locked ? buttonLabelLocked : buttonLabel)\">\n  </button>\n  \n\n</section>\n\n<section *ngIf=\"flipped\"\n         class=\"card back\"\n         @backFlip>\n\n  <div class=\"content\">\n    <h3>\n      <span class=\"titleText\"\n            [innerHTML]=\"t(titleBack)\"></span>\n    </h3>\n    <div class=\"description\"\n        [innerHTML]=\"t(descriptionBack)\"></div>\n  </div>\n\n</section>","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { \n  ANIMATION_DURATION_MS,\n  PERSPECTIVE,\n  LocalizedString,\n  SharedService\n} from '../../shared';\n\nconst ANIMATION_DURATION_WITH_DELAY = `${ANIMATION_DURATION_MS}ms ${ANIMATION_DURATION_MS}ms`;\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-strategy-card',\n  templateUrl: './strategy-card.component.html',\n  styleUrls: ['./strategy-card.component.sass'],\n  animations: [\n    trigger('backFlip', [\n      transition(':enter', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(90deg)`\n        }),\n        animate(ANIMATION_DURATION_WITH_DELAY, style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        }),\n        animate(ANIMATION_DURATION_MS, style({\n          transform: `${PERSPECTIVE} rotateY(90deg)`\n        })),\n      ]),\n    ]),\n    trigger('frontFlip', [\n      transition(':leave', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        }),\n        animate(ANIMATION_DURATION_MS, style({\n          transform: `${PERSPECTIVE} rotateY(-90deg)`\n        })),\n      ]),\n    ]),\n  ]\n})\nexport class StrategyCardComponent {\n\n  @Input() id: string = null;\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() buttonLabel: string = 'Lock This Strategy';\n  @Input() buttonLabelLocked: string = 'Strategy Locked';\n  @Input() titleBack: string = 'Feedback';\n  @Input() descriptionBack: string = '';\n  @Input() disabled: boolean = false;\n  @Input() flipped: boolean = false;\n  @Input() locked: boolean = false;\n\n  @Output() cardLocked = new EventEmitter<boolean>();\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  toggleLocked(): void {\n    this.cardLocked.emit(!this.locked);\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","<div class=\"container\"\n     [class.bar]=\"isBar\"\n     [class.dot]=\"isDot\">\n\n  <div class=\"content\">\n    <div *ngIf=\"previousValue != null\"\n         class=\"previousValue\"\n         [style.left]=\"previousValueLeft\"></div>\n    <div *ngIf=\"isBar\"\n         class=\"valueBar\"\n         [style.width]=\"valueBarWidth\"></div>\n    <!-- <div *ngIf=\"isBar\"\n         class=\"valueBar valueChange\"\n         [class.negative]=\"valueChange &lt; 0\"\n         [style.left]=\"previousValueBarLeft\"\n         [style.width]=\"valueChangeWidth\"></div>\n    <div *ngIf=\"isDot\"\n         class=\"valueDot previousValue\"\n         [style.left]=\"previousValueDotLeft\"></div> -->\n    <div *ngIf=\"isDot\"\n         class=\"valueDot\"\n         [style.left]=\"valueDotLeft\"></div>\n  </div>\n\n  <label *ngIf=\"titleTop\"\n         class=\"titleTop\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleTop)\"></span>\n  </label>\n\n  <label *ngIf=\"titleBottom\"\n         class=\"titleBottom\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleBottom)\"></span>\n  </label>\n\n</div>","import { \n  Component, \n  Input\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\nexport type ValueGaugeType = 'bar' | 'dot';\n\n\n/*\n * Show indicator values as either bars or dots on an axis.\n */\n\n@Component({\n  selector: 'app-value-gauge',\n  templateUrl: './value-gauge.component.html',\n  styleUrls: ['./value-gauge.component.sass']\n})\nexport class ValueGaugeComponent {\n\n  @Input() max: number = 10;\n  @Input() min: number = 0;\n  @Input() previousValue: number = undefined;\n  @Input() type: ValueGaugeType = 'bar';\n  @Input() titleBottom: string;\n  @Input() titleTop: string;\n  @Input() value: number = 0;\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  get isDot(): boolean {\n    return this.type === 'dot';\n  }\n\n  get isBar(): boolean {\n    return this.type === 'bar';\n  }\n\n  get valueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.value - this.min) / this.range;\n  }\n\n  get previousValueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.previousValue - this.min) / this.range;\n  }\n\n  get range(): number {\n    return this.max - this.min;\n  }\n\n  get valueBarWidth(): string {\n    return `${this.valueFraction * 100}%`;\n  }\n\n  get previousValueLeft(): string {\n    return this.isDot ? \n      this._calcDotPercentage(this.previousValueFraction) :\n      `${this.previousValueFraction * 100}%`;\n  }\n\n  // get valueChange(): number {\n  //   return this.valueFraction - this.previousValueFraction;\n  // }\n\n  // get valueChangeWidth(): string {\n  //   return `${Math.abs(this.valueChange) * 100}%`;\n  // }\n\n  get valueDotLeft(): string {\n    return this._calcDotPercentage(this.valueFraction);\n  }\n\n  // get previousValueDotLeft(): string {\n  //   const margin = 10;\n  //   return `${margin + this.valueFraction * (100 - 2 * margin)}%`;\n  // }\n\n  _calcDotPercentage(fraction: number): string {\n    const margin = 10;\n    return `${margin + fraction * (100 - 2 * margin)}%`;\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","import {\n  Component,\n  OnInit \n} from '@angular/core';\nimport { SharedService } from '../../shared';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.sass']\n})\nexport class TitleScreenComponent implements OnInit {\n\n  constructor(\n    private shared: SharedService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public t(text: string): string {\n    return this.shared.getText(text);\n  }\n}\n","<div id=\"titleAndIntro\">\n  <h1 [innerHTML]=\"t('The Agile Quest Game')\"></h1>\n\n  <div [innerHTML]=\"t('Welcome to the corner office! You are the newly appointed CEO of Acme Bank Ltd., a venerable institution on the cusp of starting its second half-century. Alas, things are about to get stormy…')\"></div>\n  \n  <button routerLink=\"game\" \n          [innerHTML]=\"t('Start game')\"></button>\n</div>\n\n<div id=\"authors\" \n     [innerHTML]=\"t('AUTHORS')\"></div>","import { Injectable } from '@angular/core';\n\nimport * as d3 from 'd3';\n\n/*\n * A basic wrapper around d3.js\n * To access the d3 namespace, use D3Service.d3\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n  public d3: any = d3;\n\n  constructor(\n  ) {\n  }\n}\n","import { \n  EventEmitter,\n  Inject,\n  Injectable,\n  LOCALE_ID \n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { \n  BehaviorSubject,\n  forkJoin \n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { \n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  Settings,\n  Strategy,\n  Texts \n} from './shared.types';\n\n\nexport const ANIMATION_DURATION_MS: number = 225;\nexport const ANIMATION_DURATION: string = ANIMATION_DURATION_MS + 'ms';\nexport const ANIMATION_EASING: string = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const ANIMATION_TIMING: string = `${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const ANIMATION_TIMING_DELAYED: string = `${ANIMATION_DURATION} ${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const DEFAULT_LOCALE = 'en-US';\nexport const PERSPECTIVE: string = 'perspective(1000px)';\nconst SETTINGS_URL = 'assets/data/settings.json';\nconst TEXTS_URL = 'assets/data/texts.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  error = new EventEmitter<string>();\n  firstScenario: Scenario;\n  indicators: {[id: string]: Indicator} = {};\n  ready = new BehaviorSubject<boolean>(false);\n  ribbons: {[id: string]: Ribbon} = {};\n  scenarios: {[id: string]: Scenario} = {};\n  settings: {\n    version: number,\n    rounds: number,\n  };\n  strategies: {[id: string]: Strategy} = {};\n  texts: Texts;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(LOCALE_ID) public locale: string\n  ) {\n    this.loadData();\n  }\n\n  public loadData(): void {\n    forkJoin([\n      this.http.get<Settings>(SETTINGS_URL).pipe(\n        map(d => {\n          this.processSettings(d);\n          return true;\n        })\n      ), \n      this.http.get<Texts>(TEXTS_URL).pipe(\n        map(d => {\n          this.texts = d;\n          return true;\n        })\n      ), \n    ]).subscribe(_ => this.ready.next(true));\n  }\n\n  /*\n   * Process the whole settings json object\n   */\n  public processSettings(settings: Settings): void {\n    this.settings = {\n      version: settings.version,\n      rounds:  settings.rounds\n    };\n\n    for (const list of ['indicators', 'ribbons', 'scenarios', 'strategies'])\n      this[list] = this.processJsonList(settings[list]);\n\n    this.firstScenario = settings.scenarios[0];\n  }\n\n  /*\n   * Create proper objects from settings.json sublists\n   */\n  public processJsonList(data: Array<any>): {[id: string]: any} {\n    const dict: {[id: string]: any} = {};\n    data.forEach(d => \n      dict[d.id] = d\n    );\n    return dict;\n  }\n\n  /*\n   * Return the prompt text in current locale or the text itself if that's not available.\n   * If text is a localized string, select the correct localized version or use the default.\n   * Note that if the text is to contain any HTML markup, it should be used as a bound\n   * property, i.e., <span [innerHTML]=\"shared.getText('Text')\"></span>. It will be \n   * sanitized by Angular but basic formatting and links are allowed, at least.\n   */\n  public getText(text: string | LocalizedString): string {\n    if (text == null)\n      return \"\";\n    else if (typeof text === \"string\")\n      return this.texts[text]?.[this.locale] ?? text;\n    else\n      return text[this.locale] ?? text[DEFAULT_LOCALE];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}