{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/game/game.component.ts","./src/app/pages/game/game.component.html","./src/app/pages/game/game.module.ts","./src/app/pages/game/index.ts","./src/app/pages/game/ribbon.component.ts","./src/app/pages/game/strategy-card.component.ts","./src/app/pages/game/strategy-card.component.html","./src/app/pages/game/value-gauge.component.html","./src/app/pages/game/value-gauge.component.ts","./src/app/pages/title-screen/title-screen.component.ts","./src/app/pages/title-screen/title-screen.component.html","./src/app/shared/d3.service.ts","./src/app/shared/index.ts","./src/app/shared/shared.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;ACV+C;AAEoC;AACtC;;;AAE7C,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4FAAoB,EAAE;IACnC,EAAE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,4FAAoB,EAAE;IACnC,EAAE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,sDAAa,EAAE;CAC7B,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC,EACnE,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACdyB;AAGM;;;;;;ICPvD,oEAGM;;IADD,iFAAU;;;IAEf,yEAEgB;IACd,2EAA+B;IACjC,4DAAM;;IAFD,iFAAU;;AD4BR,MAAM,YAAY;IAGvB,YACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAHxB,cAAS,GAAY,IAAI,CAAC;QAK/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;;wEATU,YAAY;0GAAZ,YAAY;QClCzB,wGAGM;QACN,wGAIM;;QARA,+EAAe;QAIf,0DAAgB;QAAhB,gFAAgB;kmPDSR;YACV,4DAAO,CAAC,WAAW,EAAE;gBACnB,+DAAU,CAAC,QAAQ,EAAE;oBACnB,0DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,4DAAO,CAAC,oEAAgB,EAAE,0DAAK,CAAC;wBAC9B,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;iBACJ,CAAC;gBACF,+DAAU,CAAC,QAAQ,EAAE;oBACnB,0DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,4DAAO,CAAC,oEAAgB,EAAE,0DAAK,CAAC;wBAC9B,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;SACH;;;;;;;;;;;;;;;;;;;;;;;;;AEhCuD;AACqB;AAEvB;AAEA;AACT;AACoC;AACzC;AAEL;;AAoB9B,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFP,wDAAY;2GAJd;QACT,kDAAa;QACb,8CAAS;KACV,YAVQ;YACP,oEAAa;YACb,yFAAuB;YACvB,iEAAgB;YAChB,kEAAgB;YAChB,mDAAU;SACX;mIAOU,SAAS,mBAhBlB,wDAAY;QACZ,4FAAoB,aAGpB,oEAAa;QACb,yFAAuB;QACvB,iEAAgB;QAChB,kEAAgB;QAChB,mDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbW;AAOI;AAEW;AAelB;;;;;;;;;;;IC3BlB,iFAQuE;;;;IANtD,qFAAyB;;;;IAgB1C,wFAOqD;IAAlC,yaAAiC;IAAC,4DAAoB;;;IANtD,iFAAoB;;;;IAPzC,8EAIiF;IAFxE,6UAAmC;IAI1C,gJAOyE;IAE3E,4DAAU;;;IAZD,qFAAc;IAGe,0DAAwB;IAAxB,iGAAwB;;;;IAe5D,wFAOqD;IAAlC,yaAAiC;IAAC,4DAAoB;;;;IANtD,iFAAoB;;;IALzC,8EAEuB;IAErB,gJAOyE;IAE3E,4DAAU;;;IAXD,oFAAa;IAEgB,0DAAgB;IAAhB,yFAAgB;;;;IAepD,6EAGqD;IAD7C,0UAA6B;IAErC,4DAAS;;;IADD,2KAA4C;;;;IAGpD,6EAG4C;IADpC,kUAAqB;IAE7B,4DAAS;;;IADD,kKAAmC;;;IAb7C,8EAEoB;IAElB,0HAIS;IAET,0HAIS;IAEX,4DAAU;;;IAdD,iFAAU;IAER,0DAAe;IAAf,kFAAe;IAMf,0DAAc;IAAd,iFAAc;;;IAsBvB,0EAEe;IAEb,oEAAyC;IAEzC,qEACgD;IAElD,4DAAM;;;IAPD,gFAAS;IAER,0DAA+B;IAA/B,oKAA+B;IAG/B,0DAAqC;IAArC,0KAAqC;;;IAQ3C,iFAQuE;;;;IANtD,sFAAyB;;;IAY1C,4EAGuD;;;;;IAA3C,4FAA6B;IAF7B,mFAAsB;;;;IAMpC,8EAEoB;IAElB,6EAE2C;IADnC,kSAAS,8BAAsB,IAAC;IAExC,4DAAS;IAEX,4DAAU;;;IAPD,iFAAU;IAIT,0DAAkC;IAAlC,uKAAkC;;ADxF9C,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAC7B,MAAM,mBAAmB,GAAG,GAAG,CAAC;AAChC,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B,MAAM,mBAAmB,GAAG,GAAG,CAAC;AAChC,MAAM,UAAU,GAAG,CAAC,CAAC;AAErB,MAAM,oCAAoC,GAAG,GAAG,CAAC;AACjD,MAAM,kCAAkC,GAAG,GAAG,oCAAoC,MAAM,qDAAgB,EAAE,CAAC;AAE3G,MAAM,uBAAuB,GAA8B;IACzD,sBAAsB,EAAE,GAAG;IAC3B,cAAc,EAAE,GAAG;CACpB;AACD,uBAAuB,CAAC,sBAAsB;IAC5C,uBAAuB,CAAC,sBAAsB,GAAG,oCAAoC,CAAC;AACxF,uBAAuB,CAAC,YAAY;IAClC,uBAAuB,CAAC,sBAAsB,GAAG,oCAAoC,GAAG,GAAG,CAAC;AAC9F,uBAAuB,CAAC,YAAY;IAClC,uBAAuB,CAAC,YAAY,GAAG,oCAAoC,CAAC;AAC9E,uBAAuB,CAAC,kBAAkB;IACxC,uBAAuB,CAAC,YAAY,GAAG,IAAI,CAAC;AAC9C,uBAAuB,CAAC,iBAAiB,GAAG,uBAAuB,CAAC,kBAAkB,CAAC;AAEvF;;GAEG;AACH,SAAS,GAAG,CAAC,GAAkB;IAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,CAAC;AACD,SAAS,KAAK,CAAC,GAAW,EAAE,MAAc,IAAI,EAAE,MAAc,IAAI;IAChE,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACnD,CAAC;AAiGM,MAAM,aAAa;IAuBxB,YACU,KAAyB,EACzB,MAAiB,EACjB,MAAwB;QAFxB,UAAK,GAAL,KAAK,CAAoB;QACzB,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAkB;QApBlC,oBAAe,GAAY,KAAK,CAAC;QACjC,0BAAqB,GAAgB,EAAE,CAAC;QACxC,6BAAwB,GAAgB,EAAE,CAAC;QAC3C,oBAAe,GAAe,EAAE,CAAC;QACjC,qBAAgB,GAAe,EAAE,CAAC;QAClC,0BAAqB,GAAe,EAAE,CAAC;QACvC,YAAO,GAAa,EAAE,CAAC;QACvB,kBAAa,GAAY,KAAK,CAAC;QAC/B,gCAA2B,GAAY,KAAK,CAAC;QAC7C,8BAAyB,GAAY,KAAK,CAAC;QAC3C,eAAU,GAAY,KAAK,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;QAC9B,sBAAiB,GAAY,KAAK,CAAC;QACnC,kBAAa,GAAe,EAAE,CAAC;QAEvB,mBAAc,GAAG,IAAI,KAAK,EAAgB,CAAC;QAOjD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,4DAA4D;QAC5D,2DAA2D;QAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,sDAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,0DAAa,CAAC,CAC5C,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CACrC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,CAAC;IAGD;;4CAEwC;IAExC;;OAEG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IACpC,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;IACtC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IACrD,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;IACjE,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;eACzF,CAAC,IAAI,CAAC,UAAU,CAAC;IAC7B,CAAC;IAED,IAAI,cAAc;QAChB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC;YACpC,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC;IACd,CAAC;IAGD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,KAAa;QACxB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,8CAA8C;QAC9C,OAAO,QAAQ,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,4BAA4B,CAAC;IAC5E,CAAC;IAGD;;4CAEwC;IAExC,UAAU;QAER,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,sBAAsB;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,kEAAkE;QAClE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,2DAA2D;QAC3D,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,uBAAuB,CAAC,cAAc,CAAC,CAAC;QAChF,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,GAAG,KAAK,EAAE,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QACzG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QACnG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,EAAE,uBAAuB,CAAC,YAAY,CAAC,CAAC;QAClF,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,uBAAuB,CAAC,YAAY,CAAC,CAAC;QACjF,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,2BAA2B,GAAG,IAAI,EAAE,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;QACtG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,EAAE,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;IAE1F,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,uDAAuD;QACvD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YACxC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACtC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;gBACjB,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;aACnB;iBAAM;gBACL,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;gBAChB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;aAClB;SACF;IACH,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAC5B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAClD,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;IACnC,CAAC;IAED,cAAc;;QAEZ,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YAExC,0EAA0E;YAC1E,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAE9C,IAAI,KAAK,GAAG,eAAS,CAAC,YAAY,mCAAI,CAAC,EACnC,aAAa,GAAG,eAAS,CAAC,YAAY,mCAAI,CAAC,CAAC;YAEhD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;gBACpC,MAAM,MAAM,GAAG,aAAC,CAAC,OAAO,0CAAG,GAAG,CAAC,mCAAI,CAAC,CAAC;gBACrC,KAAK,IAAI,MAAM,CAAC;gBAChB,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC;oBACrC,aAAa,IAAI,MAAM,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;gBACrC,MAAM,MAAM,GAAG,aAAC,CAAC,OAAO,0CAAG,GAAG,CAAC,mCAAI,CAAC,CAAC;gBACrC,KAAK,IAAI,MAAM,CAAC;gBAChB,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC;oBACtC,aAAa,IAAI,MAAM,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;YACxB,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;SACzC;QAED,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;QACzG,IAAI,CAAC,wBAAwB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC;IAC/G,CAAC;IAED,WAAW;QACT,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB;aAClB,MAAM,CAAC,CAAC,CAAC,EAAE,WAAC,eAAC,CAAC,OAAO,0CAAE,MAAM,IAAG,CAAC,IAAC;aAClC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAClC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC,CAAC;QACL,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,yBAAyB;;QACvB,IAAI,CAAC,qBAAqB,GAAG,CAAC,gBAAI,CAAC,gBAAgB,0CAAE,UAAU,mCAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,iBAAiB;;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,UAAI,CAAC,QAAQ,CAAC,UAAU,mCAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED;;4CAEwC;IAExC,iBAAiB,CAAC,KAAa;QAC7B,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAGD,iBAAiB;QACf,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,0DAAqB,CAAC,CAAC;IACpE,CAAC;IAED;;;;;OAKG;IACH,YAAY,CAAC,QAAkB;QAE7B,IAAI,IAAI,CAAC,eAAe;YACtB,OAAO;QAET,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACpB,mDAAmD;YACnD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YAClD,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,YAAY,GAAG;gBAClB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,2BAA2B,CAAC;gBACzC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aACnD,CAAC;SAEH;aAAM;YACL,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;IAEH,CAAC;IAED,oBAAoB,CAAC,QAAkB;QACrC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,gDAAgD;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG;YAClB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC;YAChC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC9C,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,QAAkB;QAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,6CAA6C;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,8BAA8B;QAC9B,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,2CAA2C;IAC3C,sDAAsD;IACtD,2CAA2C;IAC3C,mCAAmC;IACnC,eAAe;IACf,+BAA+B;IAC/B,IAAI;IAEJ,4CAA4C;IAC5C,4CAA4C;IAC5C,mCAAmC;IACnC,eAAe;IACf,+BAA+B;IAC/B,IAAI;IAEJ,+CAA+C;IAC/C,sDAAsD;IACtD,yEAAyE;IACzE,IAAI;IAEJ;;4CAEwC;IAEjC,SAAS;QACd,uDAAuD;QACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACpB,CAAC,gBAAgB,CAAC,EAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO;gBACnD,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBAC7D,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/C,CAAC,CAAC,CAAC;IACN,CAAC;IAEM,UAAU;;QACf,wEAAwE;QACxE,8EAA8E;QAC9E,IAAI,WAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,0CAAG,gBAAgB,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;YAEhF,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC;gBACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;;gBAEzF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAE7B,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC;gBAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;gBAEvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SAC3B;QACD,yBAAyB;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEO,UAAU,CAAC,IAAgB;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IACO,UAAU,CAAC,IAAY;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;4CAEwC;IAExC;;;OAGG;IACI,CAAC,CAAC,IAA8B;QACrC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;0EAzWU,aAAa;2GAAb,aAAa;QCpK1B,yEAEgB;QAEd,6EAAoC;QAElC,iIAQuE;QAEzE,4DAAU;QAEV,iHAeU;QAEV,iHAaU;QAEV,iHAgBU;QAEV,6EAAuB;QAErB,yEAAyB;QACvB,qFAGuB;QACvB,yEAAuB;QACrB,4EAAgC;QAAA,wDAAW;QAAA,4DAAO;QAClD,4EAA8B;QAAA,6DAAC;QAAA,4DAAO;QACtC,4EAA6B;QAAA,wDAAe;QAAA,4DAAO;QACrD,4DAAM;QACR,4DAAM;QAEN,4GASM;QAER,4DAAU;QAEV,+EAAuC;QAErC,oIAQuE;QAEzE,4DAAU;QAEV,+EAAsB;QAEpB,0HAGuD;QAEzD,4DAAU;QAEV,oHASU;QAEZ,4DAAM;;QAhID,6FAAqC;QACrC,iFAAU;QAI4B,0DAAwB;QAAxB,8FAAwB;QAYvD,0DAA+B;QAA/B,+FAA+B;QAiB/B,0DAAuB;QAAvB,uFAAuB;QAevB,0DAAuD;QAAvD,2HAAuD;QAuBvC,0DAA8B;QAA9B,2FAA8B;QAGlB,0DAAW;QAAX,0EAAW;QAEd,0DAAe;QAAf,8EAAe;QAI1C,0DAAkB;QAAlB,kFAAkB;QAee,0DAA2B;QAA3B,iGAA2B;QAcnC,0DAAY;QAAZ,gFAAY;QAOnC,0DAAkB;QAAlB,kFAAkB;yokBD7ChB;YACV,6DAAO,CAAC,WAAW,EAAE;gBACnB,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,6DAAO,CAAC,qDAAgB,EAAE,2DAAK,CAAC;wBAC9B,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;iBACJ,CAAC;gBACF,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,mEAAmE;oBACnE,+BAA+B;oBAC/B,6DAAO,CAAC,6DAAwB,EAAE,2DAAK,CAAC;wBACtC,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;YACF,6DAAO,CAAC,cAAc,EAAE;gBACtB,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,kBAAkB;qBAC9B,CAAC;oBACF,mEAAmE;oBACnE,6DAAO,CAAC,kCAAkC,EAAE,2DAAK,CAAC;wBAChD,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,MAAM;qBAClB,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;YACF,6DAAO,CAAC,eAAe,EAAE;gBACvB,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,MAAM;qBAClB,CAAC;oBACF,6DAAO,CAAC,kCAAkC,EAAE,2DAAK,CAAC;wBAChD,OAAO,EAAE,GAAG;wBACZ,SAAS,EAAE,gCAAgC;qBAC5C,CAAC,CAAC;iBACJ,CAAC;gBACF,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,GAAG;wBACZ,SAAS,EAAE,gCAAgC;qBAC5C,CAAC;oBACF,6DAAO,CAAC,kCAAkC,EAAE,2DAAK,CAAC;wBAChD,OAAO,EAAE,GAAG;wBACZ,SAAS,EAAE,8BAA8B;qBAC1C,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;YACF,6DAAO,CAAC,mBAAmB,EAAE;gBAC3B,2DAAK,CAAC,OAAO,EAAE,2DAAK,CAAC;oBACnB,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,2DAAK,CAAC,QAAQ,EAAE,2DAAK,CAAC;oBACpB,OAAO,EAAE,GAAG;iBACb,CAAC,CAAC;gBACH,gEAAU,CAAC,kBAAkB,EAAE;oBAC7B,6DAAO,CAAC,kCAAkC,CAAC;iBAC5C,CAAC;aACH,CAAC;YACF,6DAAO,CAAC,UAAU,EAAE;gBAClB,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,GAAG,gDAAW,iCAAiC;qBAC3D,CAAC;oBACF,6DAAO,CAAC,kCAAkC,EAAE,2DAAK,CAAC;wBAChD,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,GAAG,gDAAW,EAAE;qBAC5B,CAAC,CAAC;iBACJ,CAAC;gBACF,gEAAU,CAAC,QAAQ,EAAE;oBACnB,2DAAK,CAAC;wBACJ,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,GAAG,gDAAW,EAAE;qBAC5B,CAAC;oBACF,6DAAO,CAAC,kCAAkC,EAAE,2DAAK,CAAC;wBAChD,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,GAAG,gDAAW,iCAAiC;qBAC3D,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;SACH;;;;;;;;;;;;;;;;;;;;;;;;;;AEjK4C;AACW;AACqB;AAED;AACjB;AAEZ;AACI;AACa;AACJ;;AAoBvD,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;2GAjBZ;YACP,yDAAY;YACZ,oEAAa;YACb,yFAAuB;YACvB,wFAAwB;YACxB,uEAAgB;SACjB;mIAWU,UAAU,mBANnB,0DAAa;QACb,8DAAe;QACf,2EAAqB;QACrB,uEAAmB,aAbnB,yDAAY;QACZ,oEAAa;QACb,yFAAuB;QACvB,wFAAwB;QACxB,uEAAgB,aAGhB,0DAAa;;;;;;;;;;;;;;;;;;;;;;;;;ACtBgB;AACH;AACK;AACO;AACF;;;;;;;;;;;;;;;;;;;;ACQxC;;GAEG;AAOI,MAAM,eAAe;IAI1B,YACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAHtB,UAAK,GAAW,EAAE,CAAC;IAK5B,CAAC;IAED;;;OAGG;IACH,CAAC,CAAC,IAA8B;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;8EAfU,eAAe;6GAAf,eAAe;QAHf,wEAAO;QAAA,uDAAc;QAAA,4DAAQ;;QAAtB,0DAAc;QAAd,iFAAc;;;;;;;;;;;;;;;;;;;;;ACbX;AAOM;AAMP;;;;;;IClBtB,6EAIoB;IAElB,yEAAqB;IACnB,oEACwC;IAC1C,4DAAM;IAEN,wEAAO;IACL,qEACoC;IACtC,4DAAQ;IAER,4EAIkE;IAD1D,gUAAwB;IAEhC,4DAAS;IAGX,4DAAU;;;IAtBD,sFAA2B;IAE3B,iFAAU;IAIV,0DAA4B;IAA5B,iKAA4B;IAK3B,0DAAsB;IAAtB,2JAAsB;IAKtB,0DAAqB;IAArB,qFAAqB;;;IAQ/B,6EAEmB;IAEjB,yEAAqB;IACnB,qEAAI;IACF,qEACwC;IAC1C,4DAAK;IACL,oEAC2C;IAC7C,4DAAM;IAER,4DAAU;;;IAXD,gFAAS;IAKN,0DAA0B;IAA1B,+JAA0B;IAG9B,0DAAgC;IAAhC,qKAAgC;;ADhBxC,MAAM,6BAA6B,GAAG,GAAG,0DAAqB,MAAM,0DAAqB,IAAI,CAAC;AAE9F;;GAEG;AAqCI,MAAM,qBAAqB;IAehC,YACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAdtB,OAAE,GAAW,IAAI,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAW,EAAE,CAAC;QACzB,gBAAW,GAAW,oBAAoB,CAAC;QAC3C,sBAAiB,GAAW,iBAAiB,CAAC;QAC9C,cAAS,GAAW,UAAU,CAAC;QAC/B,oBAAe,GAAW,EAAE,CAAC;QAC7B,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,KAAK,CAAC;QACzB,WAAM,GAAY,KAAK,CAAC;QAEvB,eAAU,GAAG,IAAI,uDAAY,EAAW,CAAC;IAKnD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,CAAC,CAAC,IAA8B;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;0FA9BU,qBAAqB;mHAArB,qBAAqB;QC7DlC,yHAwBU;QAEV,yHAaU;;QAvCA,8EAAc;QA0Bd,0DAAa;QAAb,6EAAa;mhWDIT;YACV,4DAAO,CAAC,UAAU,EAAE;gBAClB,+DAAU,CAAC,QAAQ,EAAE;oBACnB,0DAAK,CAAC;wBACJ,SAAS,EAAE,GAAG,gDAAW,iBAAiB;qBAC3C,CAAC;oBACF,4DAAO,CAAC,6BAA6B,EAAE,0DAAK,CAAC;wBAC3C,SAAS,EAAE,GAAG,gDAAW,gBAAgB;qBAC1C,CAAC,CAAC;iBACJ,CAAC;gBACF,+DAAU,CAAC,QAAQ,EAAE;oBACnB,0DAAK,CAAC;wBACJ,SAAS,EAAE,GAAG,gDAAW,gBAAgB;qBAC1C,CAAC;oBACF,4DAAO,CAAC,0DAAqB,EAAE,0DAAK,CAAC;wBACnC,SAAS,EAAE,GAAG,gDAAW,iBAAiB;qBAC3C,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;YACF,4DAAO,CAAC,WAAW,EAAE;gBACnB,+DAAU,CAAC,QAAQ,EAAE;oBACnB,0DAAK,CAAC;wBACJ,SAAS,EAAE,GAAG,gDAAW,gBAAgB;qBAC1C,CAAC;oBACF,4DAAO,CAAC,0DAAqB,EAAE,0DAAK,CAAC;wBACnC,SAAS,EAAE,GAAG,gDAAW,kBAAkB;qBAC5C,CAAC,CAAC;iBACJ,CAAC;aACH,CAAC;SACH;;;;;;;;;;;;;;;;;;;;;;;IEtDC,oEAE4C;;;IAAvC,2FAAgC;;;IACrC,oEAEyC;;;IAApC,wFAA6B;;;IASlC,oEAEuC;;;IAAlC,sFAA2B;;;IAGlC,4EACwB;IACtB,sEACuC;IACzC,4DAAQ;;;IADA,0DAAyB;IAAzB,8JAAyB;;;IAGjC,4EAC2B;IACzB,sEAC0C;IAC5C,4DAAQ;;;IADA,0DAA4B;IAA5B,iKAA4B;;ACpBtC;;GAEG;AAOI,MAAM,mBAAmB;IAU9B,YACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QATtB,QAAG,GAAW,EAAE,CAAC;QACjB,QAAG,GAAW,CAAC,CAAC;QAChB,kBAAa,GAAW,SAAS,CAAC;QAClC,SAAI,GAAmB,KAAK,CAAC;QAG7B,UAAK,GAAW,CAAC,CAAC;IAK3B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa;QACf,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;YAClB,OAAO,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9C,CAAC;IAED,IAAI,qBAAqB;QACvB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;YAClB,OAAO,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACtD,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa;QACf,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,CAAC;IACxC,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;YACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;YACrD,GAAG,IAAI,CAAC,qBAAqB,GAAG,GAAG,GAAG,CAAC;IAC3C,CAAC;IAED,8BAA8B;IAC9B,4DAA4D;IAC5D,IAAI;IAEJ,mCAAmC;IACnC,mDAAmD;IACnD,IAAI;IAEJ,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAED,uCAAuC;IACvC,uBAAuB;IACvB,mEAAmE;IACnE,IAAI;IAEJ,kBAAkB,CAAC,QAAgB;QACjC,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;IACtD,CAAC;IAED;;;OAGG;IACH,CAAC,CAAC,IAA8B;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;sFA7EU,mBAAmB;iHAAnB,mBAAmB;QDtBhC,yEAEyB;QAEvB,yEAAqB;QACnB,+GAE4C;QAC5C,+GAEyC;QASzC,+GAEuC;QACzC,4DAAM;QAEN,mHAIQ;QAER,mHAIQ;QAEV,4DAAM;;QAnCD,2EAAmB;QAId,0DAA2B;QAA3B,2FAA2B;QAG3B,0DAAW;QAAX,2EAAW;QAWX,0DAAW;QAAX,2EAAW;QAKX,0DAAc;QAAd,8EAAc;QAMd,0DAAiB;QAAjB,iFAAiB;;;;;;;;;;;;;;;;;;;;;;;AEnBpB,MAAM,oBAAoB;IAE/B,YACU,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAC3B,CAAC;IAEL,QAAQ;IACR,CAAC;IAEM,CAAC,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;wFAXU,oBAAoB;kHAApB,oBAAoB;QCXjC,yEAAwB;QACtB,mEAAiD;QAEjD,oEAA8N;QAE9N,uEAC+C;QACjD,4DAAM;QAEN,oEACsC;;QAThC,0DAAuC;QAAvC,kKAAuC;QAEtC,0DAAkN;QAAlN,kVAAkN;QAG/M,0DAA6B;QAA7B,wJAA6B;QAIlC,0DAA0B;QAA1B,qJAA0B;;;;;;;;;;;;;;;;;;;ACRN;;AAEzB;;;GAGG;AAII,MAAM,SAAS;IAGpB;QAFO,OAAE,GAAQ,+BAAE,CAAC;IAIpB,CAAC;;kEALU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTa;AACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGN;AAKT;AACuB;;;AAY9B,MAAM,qBAAqB,GAAW,GAAG,CAAC;AAC1C,MAAM,kBAAkB,GAAW,qBAAqB,GAAG,IAAI,CAAC;AAChE,MAAM,gBAAgB,GAAW,8BAA8B;AAC/D,MAAM,gBAAgB,GAAW,GAAG,kBAAkB,IAAI,gBAAgB,EAAE,CAAC;AAC7E,MAAM,wBAAwB,GAAW,GAAG,kBAAkB,IAAI,kBAAkB,IAAI,gBAAgB,EAAE,CAAC;AAC3G,MAAM,cAAc,GAAG,OAAO,CAAC;AAC/B,MAAM,WAAW,GAAW,qBAAqB,CAAC;AACzD,MAAM,YAAY,GAAG,2BAA2B,CAAC;AACjD,MAAM,SAAS,GAAG,wBAAwB,CAAC;AAKpC,MAAM,aAAa;IAexB,YACU,IAAgB,EACE,MAAc;QADhC,SAAI,GAAJ,IAAI,CAAY;QACE,WAAM,GAAN,MAAM,CAAQ;QAf1C,UAAK,GAAG,IAAI,uDAAY,EAAU,CAAC;QAEnC,eAAU,GAA8B,EAAE,CAAC;QAC3C,UAAK,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAC5C,YAAO,GAA2B,EAAE,CAAC;QACrC,cAAS,GAA6B,EAAE,CAAC;QAKzC,eAAU,GAA6B,EAAE,CAAC;QAOxC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEM,QAAQ;QACb,8CAAQ,CAAC;YACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,YAAY,CAAC,CAAC,IAAI,CACxC,mDAAG,CAAC,CAAC,CAAC,EAAE;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBACxB,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CACH;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,SAAS,CAAC,CAAC,IAAI,CAClC,mDAAG,CAAC,CAAC,CAAC,EAAE;gBACN,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CACH;SACF,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,eAAe,CAAC,QAAkB;QACvC,IAAI,CAAC,QAAQ,GAAG;YACd,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,MAAM,EAAG,QAAQ,CAAC,MAAM;SACzB,CAAC;QAEF,KAAK,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IACI,eAAe,CAAC,IAAgB;QACrC,MAAM,IAAI,GAAwB,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CACf,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CACf,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;OAMG;IACI,OAAO,CAAC,IAA8B;;QAC3C,IAAI,IAAI,IAAI,IAAI;YACd,OAAO,EAAE,CAAC;aACP,IAAI,OAAO,IAAI,KAAK,QAAQ;YAC/B,OAAO,gBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0CAAG,IAAI,CAAC,MAAM,CAAC,mCAAI,IAAI,CAAC;;YAE/C,OAAO,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mCAAI,IAAI,CAAC,cAAc,CAAC,CAAC;IACrD,CAAC;;0EA/EU,aAAa,+KAiBd,oDAAS;8GAjBR,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, \n         RouterModule } from '@angular/router';\n\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameComponent } from './pages/game';\n\nconst routes: Routes = [\n  { path: '', \n    component: TitleScreenComponent },\n  { path: 'start', \n    component: TitleScreenComponent },\n  { path: 'game', \n    component: GameComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { trigger,\n         style,\n         animate,\n         transition } from '@angular/animations';\n\nimport { ANIMATION_TIMING,\n         SharedService} from './shared/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class AppComponent {\n  public isLoading: boolean = true;\n\n  constructor(\n    private shared: SharedService\n  ) {\n    this.shared.ready.subscribe(value => {\n      this.isLoading = !value;\n    });\n  }\n}\n","<div *ngIf=\"isLoading\"\n     class=\"loading\"\n     @fadeInOut>\n</div>\n<div *ngIf=\"!isLoading\"\n     class=\"content\"\n     @fadeInOut>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TitleScreenComponent } from './pages/title-screen/title-screen.component';\nimport { GameModule } from './pages/game';\nimport { SharedService, \n         D3Service } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GameModule\n  ],\n  providers: [\n    SharedService, \n    D3Service\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { \n  Component, \n  OnDestroy,\n  OnInit \n} from '@angular/core';\nimport { \n  ActivatedRoute,\n  NavigationEnd,\n  Router \n} from '@angular/router';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { \n  ANIMATION_DURATION_MS,\n  ANIMATION_EASING,\n  ANIMATION_TIMING,\n  ANIMATION_TIMING_DELAYED,\n  PERSPECTIVE,\n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  Settings,\n  SharedService,\n  Strategy,\n  Texts\n} from '../../shared';\nimport { ResultChartData } from './result-chart.component';\n\nconst DATA_KEY_VERSION = 'v';\nconst DATA_KEY_SHOWREPORT = 'r';\nconst DATA_SEPARATOR = ',';\nconst DATA_KEY_STRATEGIES = 's';\nconst ROUND_BASE = 1;\n\nconst ANIMATION_DURATION_PREVIOUS_CARDS_MS = 450;\nconst ANIMATION_TIMING_PREVIOUS_CARDS_MS = `${ANIMATION_DURATION_PREVIOUS_CARDS_MS}ms ${ANIMATION_EASING}`;\n\nconst ROUND_START_SCHEDULE_MS: {[event: string]: number} = {\n  hidePreviousStrategies: 225,\n  initIndicators: 700\n}\nROUND_START_SCHEDULE_MS.showPreviousStrategies = \n  ROUND_START_SCHEDULE_MS.hidePreviousStrategies + ANIMATION_DURATION_PREVIOUS_CARDS_MS;\nROUND_START_SCHEDULE_MS.hideScenario  = \n  ROUND_START_SCHEDULE_MS.showPreviousStrategies + ANIMATION_DURATION_PREVIOUS_CARDS_MS - 125;\nROUND_START_SCHEDULE_MS.showScenario  = \n  ROUND_START_SCHEDULE_MS.hideScenario + ANIMATION_DURATION_PREVIOUS_CARDS_MS;\nROUND_START_SCHEDULE_MS.showLoadStrategies  = \n  ROUND_START_SCHEDULE_MS.showScenario + 2000;\nROUND_START_SCHEDULE_MS.fadeOutIndicators = ROUND_START_SCHEDULE_MS.showLoadStrategies;\n\n/*\n * For convenience\n */\nfunction sum(arr: Array<number>): number {\n  return arr.reduce((a, b) => a + b, 0);\n}\nfunction clamp(num: number, min: number = null, max: number = null): number {\n  return num <= min ? min : num >= max ? max : num;\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(ANIMATION_TIMING, style({\n          opacity: 1,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        // We add a delay to allow for the :enter animation to finish first\n        // when switching subcategories\n        animate(ANIMATION_TIMING_DELAYED, style({\n          opacity: 0,\n        })),\n      ]),\n    ]),\n    trigger('currentCards', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(60vh)'\n        }),\n        // We add a delay to allow for the :leave animation to finish first\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 1,\n          transform: 'none'\n        })),\n      ])\n    ]),\n    trigger('previousCards', [\n      transition(':enter', [\n        style({\n          opacity: 1,\n          transform: 'none'\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 0.3,\n          transform: 'translateY(-2.5rem) scale(0.9)',\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0.0,\n          transform: 'translateY(-5rem) scale(0.8)',\n        })),\n      ]),\n    ]),\n    trigger('previousCardsFade', [\n      state('faded', style({\n        opacity: 0.15\n      })),\n      state('normal', style({\n        opacity: 0.3\n      })),\n      transition('normal <=> faded', [\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS)\n      ])\n    ]),\n    trigger('scenario', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, -25vh, 500px)`\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 1,\n          transform: `${PERSPECTIVE}`,\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: `${PERSPECTIVE}`,\n        }),\n        animate(ANIMATION_TIMING_PREVIOUS_CARDS_MS, style({\n          opacity: 0,\n          transform: `${PERSPECTIVE} translate3d(0px, 15vh, -400px)`,\n        })),\n      ]),\n    ]),\n  ],\n})\nexport class GameComponent implements OnDestroy, OnInit {\n\n  bottomDialog: {\n    text: string,\n    confirm: () => void\n  };\n  inFeedbackPhase: boolean = false;\n  performanceIndicators: Indicator[] = [];\n  organisationalAttributes: Indicator[] = [];\n  playedScenarios: Scenario[] = [];\n  playedStrategies: Strategy[] = [];\n  previousStrategyCards: Strategy[] = [];\n  ribbons: Ribbon[] = [];\n  roundStarting: boolean = false;\n  showLoadStrategyCardsDialog: boolean = false;\n  showPreviousStrategyCards: boolean = false;\n  showReport: boolean = false;\n  showScenario: boolean = false;\n  showStrategyCards: boolean = false;\n  strategyCards: Strategy[] = [];\n\n  private _subscriptions = new Array<Subscription>();\n\n  constructor(\n    private route:     ActivatedRoute,\n    private router:    Router,\n    private shared:    SharedService\n  ) {\n    this.resetState();\n  }\n\n  ngOnInit(): void {\n    this.readParams();\n    // We need to explicitly read the params whenever navigating\n    // as onInit won't be called while we stay on the same page\n    this._subscriptions.push(\n      this.router.events.pipe(\n        filter(evt => evt instanceof NavigationEnd)\n      ).subscribe(() => this.readParams())\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n\n  /**************************************\n   * GETTERS                            *\n   **************************************/\n\n  /*\n   * Note that round is ROUND_BASE-based (= 1)\n   */\n  get round(): number {\n    return this.rawRound + ROUND_BASE;\n  }\n\n  get lastRound(): number {\n    return this.shared.settings.rounds;\n  }\n\n  /*\n   * The absolute round without ROUND_BASE\n   */\n  get rawRound(): number {\n    return this.playedStrategies.length;\n  }\n\n  get isFirstRound(): boolean {\n    return this.rawRound === 0;\n  }\n  \n  get roundsLeft(): number {\n    return this.shared.settings.rounds - this.rawRound;\n  }\n\n  get roundsUsedPercentage(): number {\n    return (this.rawRound + 1) / this.shared.settings.rounds * 100;\n  }\n\n  get gameOver(): boolean {\n    return (this.roundsLeft <= 0 || !this.scenario.strategies || this.scenario.strategies.length === 0)\n           && !this.showReport;\n  }\n\n  get latestStrategy(): Strategy {\n    if (this.playedStrategies.length === 0)\n      return null;\n    return this.playedStrategies[this.playedStrategies.length - 1];\n  }\n\n  get previousScenario(): Scenario {\n    return this.playedScenarios.length > 1 ? \n           this.playedScenarios[this.playedScenarios.length - 2] :\n           null;\n  }\n\n\n  get scenario(): Scenario {\n    return this.playedScenarios[this.playedScenarios.length - 1];\n  }\n\n  /*\n   * Get the top position of the ribbon at the given index\n   */\n  getRibbonTop(index: number): string {\n    if (this.ribbons.length === 0)\n      return '0%';\n    // NB. Match last measurement to ribbon height\n    return `calc(${index} / ${this.ribbons.length} * (100% - 11.6979592rem))`;\n  }\n\n\n  /**************************************\n   * VALUE INITIALISATION               *\n   **************************************/\n\n  startRound(): void {\n\n    this.resetState();\n    \n    // Init different data\n    this.initScenarios();\n    this.initRibbons();\n\n    // This sets a class of the same name, which highlights indicators\n    this.roundStarting = true;\n\n    // Coordinate entry, exit and update of differenet elements\n    setTimeout(() => this.initIndicators(), ROUND_START_SCHEDULE_MS.initIndicators);\n    setTimeout(() => this.showPreviousStrategyCards = false, ROUND_START_SCHEDULE_MS.hidePreviousStrategies);\n    setTimeout(() => this.initPreviousStrategyCards(), ROUND_START_SCHEDULE_MS.showPreviousStrategies);\n    setTimeout(() => this.showScenario = false, ROUND_START_SCHEDULE_MS.hideScenario);\n    setTimeout(() => this.showScenario = true, ROUND_START_SCHEDULE_MS.showScenario);\n    setTimeout(() => this.showLoadStrategyCardsDialog = true, ROUND_START_SCHEDULE_MS.showLoadStrategies);\n    setTimeout(() => this.roundStarting = false, ROUND_START_SCHEDULE_MS.fadeOutIndicators);\n\n  }\n\n  resetState(): void {\n    this.bottomDialog = undefined;\n    this.inFeedbackPhase = false;\n    this.roundStarting = false;\n    this.showLoadStrategyCardsDialog = false;\n    this.showScenario = false;\n    this.showReport = false;\n\n    // Set the correct flipped/locked states for strategies\n    for (const sid in this.shared.strategies) {\n      const s = this.shared.strategies[sid];\n      if (!this.playedStrategies.includes(s)) {\n        s.locked = false;\n        s.flipped = false;\n      } else {\n        s.locked = true;\n        s.flipped = true;\n      }\n    }\n  }\n\n  initScenarios(): void {\n    const scenarios = [this.shared.firstScenario];\n    this.playedStrategies.map(s => \n      scenarios.push(this.shared.scenarios[s.scenario])\n    );\n    this.playedScenarios = scenarios;\n  }\n\n  initIndicators(): void {\n\n    for (const iid in this.shared.indicators) {\n\n      // Calc values based on the effects of all played scenarios and strategies\n      const indicator = this.shared.indicators[iid];\n\n      let value = indicator.initialValue ?? 0,\n          previousValue = indicator.initialValue ?? 0;\n      \n      this.playedScenarios.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedScenarios.length - 1)\n          previousValue += effect;\n      });\n      this.playedStrategies.forEach((s, i) => {\n        const effect = s.effects?.[iid] ?? 0;\n        value += effect;\n        if (i < this.playedStrategies.length - 1)\n          previousValue += effect;\n      });\n\n      indicator.value = value;\n      indicator.previousValue = previousValue;\n    }\n\n    this.performanceIndicators = Object.values(this.shared.indicators).filter(i => i.type === 'performance');\n    this.organisationalAttributes = Object.values(this.shared.indicators).filter(i => i.type === 'organisation');\n  }\n\n  initRibbons(): void {\n    const ribbons = [];\n    this.playedStrategies\n      .filter(s => s.ribbons?.length > 0)\n      .forEach(s => s.ribbons.forEach(r => \n        ribbons.push(this.shared.ribbons[r])  \n      ));\n    this.ribbons = ribbons;\n  }\n\n  initPreviousStrategyCards(): void {\n    this.previousStrategyCards = (this.previousScenario?.strategies ?? []).map(s => this.shared.strategies[s]);\n    this.showPreviousStrategyCards = true;\n    this.showStrategyCards = false;\n  }\n\n  initStrategyCards(): void {\n    this.strategyCards = (this.scenario.strategies ?? []).map(s => this.shared.strategies[s]);\n    this.showLoadStrategyCardsDialog = false;\n    this.showStrategyCards = true;\n  }\n\n  /**************************************\n   * USER ACTIONS                       *\n   **************************************/\n\n  goToPreviousRound(event?: Event): void {\n    this.playedStrategies.pop();\n    this.updateUrl();\n  }\n\n\n  loadStrategyCards(): void {\n    setTimeout(() => this.initStrategyCards(), ANIMATION_DURATION_MS);\n  }\n\n  /*\n   * Selecting a strategy goes in three steps:\n   * 1. Lock the card => onCardLocked\n   * 2. Confirm => showStrategyFeedback\n   * 3. Go to next round => executeStrategy => startRound\n   */\n  onCardLocked(strategy: Strategy): void {\n\n    if (this.inFeedbackPhase)\n      return;\n\n    if (!strategy.locked) {\n      // Only one strategy can be locked at the same time\n      this.strategyCards.forEach(s => s.locked = false);\n      strategy.locked = true;\n\n      this.bottomDialog = {\n        text: this.t('Execute selected strategy'),\n        confirm: () => this.showStrategyFeedback(strategy)\n      };\n\n    } else {\n      strategy.locked = false;\n      this.bottomDialog = undefined;\n    }\n     \n  }\n\n  showStrategyFeedback(strategy: Strategy): void {\n    strategy.flipped = true;\n    // This disabled further selection of strategies\n    this.inFeedbackPhase = true;\n    this.bottomDialog = {\n      text: this.t('Start next round'),\n      confirm: () => this.executeStrategy(strategy)\n    };\n  }\n\n  executeStrategy(strategy: Strategy): void {\n    this.playedStrategies.push(strategy);\n    this.updateUrl();\n  }\n\n  modalClick(event?: Event): void {\n    this.startOver(event);\n  }\n\n  startOver(event?: Event): void {\n    // We are just navigating to the title screen\n    this.router.navigate(['/']);\n    // To disable background click\n    event?.stopPropagation();\n  }\n\n  // public resetClick(event?: Event): void {\n  //   this.hideOthers(ShowableTopic.ResetConfirmation);\n  //   this.showStartOverConfirmation = true;\n  //   // To disable background click\n  //   if (event)\n  //     event.stopPropagation();\n  // }\n\n  // public cancelReset(event?: Event): void {\n  //   this.showStartOverConfirmation = false;\n  //   // To disable background click\n  //   if (event)\n  //     event.stopPropagation();\n  // }\n\n  // public startOverClick(event?: Event): void {\n  //   this.hideOthers(ShowableTopic.ResetConfirmation);\n  //   setTimeout(() => this.startOver(event), this.options.purchaseDelay);\n  // }\n\n  /**************************************\n   * URL PARAMS                         *\n   **************************************/\n\n  public updateUrl(): void {\n    // We use router to save the game data between sessions\n    this.router.navigate([{\n      [DATA_KEY_VERSION]:    this.shared.settings.version,\n      [DATA_KEY_STRATEGIES]: this._encodeIds(this.playedStrategies),\n      [DATA_KEY_SHOWREPORT]: this.showReport ? 1 : 0,\n    }]);\n  }\n\n  public readParams(): void {\n    // Only load purchases from route data if the application versions match\n    // Otherwise reset the state to handle the going back to an url without params\n    if (this.route.snapshot.params?.[DATA_KEY_VERSION] && \n        this.route.snapshot.params[DATA_KEY_VERSION] == this.shared.settings.version) {\n\n      if (this.route.snapshot.params[DATA_KEY_STRATEGIES])\n        this.playedStrategies = this._decodeIds(this.route.snapshot.params[DATA_KEY_STRATEGIES]);\n      else\n        this.playedStrategies = [];\n\n      if (this.route.snapshot.params[DATA_KEY_SHOWREPORT] && \n          this.route.snapshot.params[DATA_KEY_SHOWREPORT] == 1)\n        this.showReport = true;\n      else\n        this.showReport = false;\n    }\n    // This resets the screen\n    this.startRound();\n  }\n\n  private _encodeIds(list: Strategy[]): string {\n    return list.map(s => s.id).join(DATA_SEPARATOR);\n  }\n  private _decodeIds(text: string): Strategy[] {\n    return text.split(DATA_SEPARATOR).map(s => this.shared.strategies[s]);\n  }\n\n  /**************************************\n   * TEXT LOCALISATION                  *\n   **************************************/\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  public t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n\n  // /*\n  //  * Get data for the resultChart component to use\n  //  */\n  // public get resultChartData(): ResultChartData {\n  //   throw new Error(\"Not implemented\");\n  //   const data = new Array<any>();\n  //   const purchases = this.purchasesAndPassedRounds;\n\n  //   // NB. This code is partly copied from getAccumulatedReturns\n  //   let balance = this.shared.settings.balance;\n  //   for (let i = 0; i <= purchases.length; i++) {\n  //     const returns = this.getTotalReturns(purchases.slice(0, i));\n  //     balance += returns;\n  //     balance -= i === 0 ? 0 : purchases[i - 1].price;\n  //     data.push({\n  //       round:      i + ROUND_BASE,\n  //       balance:    balance,\n  //       returns:    returns,\n  //       investment: this.t(i === 0 ? 'Start' : (purchases[i - 1] instanceof NullInvestment ? 'Pass' : purchases[i - 1].title))\n  //     });\n  //   }\n  //   return data;\n  // }\n\n}","<div id=\"grid\"\n     [class.roundStarting]=\"roundStarting\"\n     @fadeInOut>\n\n  <section id=\"performanceIndicators\">\n\n    <app-value-gauge *ngFor=\"let indicator of performanceIndicators\"\n                     type=\"bar\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section *ngIf=\"showPreviousStrategyCards\"\n           id=\"previousStrategyCards\"\n           (click)=\"goToPreviousRound($event)\"\n           @previousCards\n           [@previousCardsFade]=\"showLoadStrategyCardsDialog ? 'faded' : 'normal'\">\n\n    <app-strategy-card *ngFor=\"let card of previousStrategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"true\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section *ngIf=\"showStrategyCards\"\n           id=\"strategyCards\"\n           @currentCards>\n\n    <app-strategy-card *ngFor=\"let card of strategyCards\"\n                       [title]=\"card.title\"\n                       [description]=\"card.description\"\n                       [descriptionBack]=\"card.feedback\"\n                       [flipped]=\"card.flipped\"\n                       [locked]=\"card.locked\"\n                       [disabled]=\"inFeedbackPhase\"\n                       (cardLocked)=\"onCardLocked(card)\"></app-strategy-card>\n\n  </section>\n\n  <section *ngIf=\"!showStrategyCards && showLoadStrategyCardsDialog\"\n           id=\"loadStrategyCardsDialog\"\n           @fadeInOut>\n\n    <button *ngIf=\"!gameOver\"\n            type=\"button\"\n            (click)=\"loadStrategyCards()\"\n            [innerHTML]=\"t('Show Available Strategies')\">\n    </button>\n\n    <button *ngIf=\"gameOver\"\n            type=\"button\"\n            (click)=\"startOver()\"\n            [innerHTML]=\"t('Start a New Game')\">\n    </button>\n\n  </section>\n\n  <section id=\"scenario\">\n\n    <div id=\"roundIndicator\">\n      <mat-progress-spinner color=\"white\"\n                            mode=\"determinate\"\n                            [value]=\"roundsUsedPercentage\">\n      </mat-progress-spinner>\n      <div class=\"roundText\">\n        <span class=\"roundText-current\">{{ round }}</span>\n        <span class=\"roundText-slash\">/</span>\n        <span class=\"roundText-last\">{{ lastRound }}</span>\n      </div>\n    </div>\n\n    <div *ngIf=\"showScenario\"\n         id=\"scenarioContent\"\n         @scenario>\n\n      <h1 [innerHTML]=\"t(scenario.title)\"></h1>\n      \n      <div class=\"description\"\n          [innerHTML]=\"t(scenario.description)\"></div>\n\n    </div>\n\n  </section>\n\n  <section id=\"organisationalAttributes\">\n\n    <app-value-gauge *ngFor=\"let indicator of organisationalAttributes\"\n                     type=\"dot\"\n                     [value]=\"indicator.value\"\n                     [previousValue]=\"indicator.previousValue\"\n                     [titleBottom]=\"indicator.titleBottom\"\n                     [titleTop]=\"indicator.titleTop\"\n                     [min]=\"indicator.minValue\"\n                     [max]=\"indicator.maxValue\"\n                     [matTooltip]=\"t(indicator.toolTip)\"></app-value-gauge>\n\n  </section>\n\n  <section id=\"ribbons\">\n\n    <app-ribbon *ngFor=\"let ribbon of ribbons; index as i\"\n                [title]=\"ribbon.title\"\n                [matTooltip]=\"t(ribbon.description)\"\n                [style.top]=\"getRibbonTop(i)\"></app-ribbon>\n\n  </section>\n\n  <section *ngIf=\"bottomDialog\"\n           id=\"bottomDialog\"\n           @fadeInOut>\n\n    <button type=\"button\"\n            (click)=\"bottomDialog.confirm()\"\n            [innerHTML]=\"t(bottomDialog.text)\">\n    </button>\n\n  </section>\n\n</div>\n\n<!-- <div *ngIf=\"gameOver\"\n     (click)=\"modalClick($event)\"\n     class=\"modal\"></div> -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { GameComponent } from './game.component';\nimport { RibbonComponent } from './ribbon.component';\nimport { StrategyCardComponent } from './strategy-card.component';\nimport { ValueGaugeComponent } from './value-gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule\n  ],\n  exports: [\n    GameComponent,\n  ],\n  declarations: [\n    GameComponent,\n    RibbonComponent,\n    StrategyCardComponent,\n    ValueGaugeComponent\n  ],\n})\nexport class GameModule {}","export * from './game.component';\nexport * from './game.module';\nexport * from './ribbon.component';\nexport * from './strategy-card.component';\nexport * from './value-gauge.component';","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-ribbon',\n  template: `<label>{{ t(title) }}</label>`,\n  styleUrls: ['./ribbon.component.sass']\n})\nexport class RibbonComponent {\n\n  @Input() title: string = '';\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","import { \n  Component, \n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { \n  trigger,\n  state,\n  style,\n  animate,\n  transition \n} from '@angular/animations';\nimport { \n  ANIMATION_DURATION_MS,\n  PERSPECTIVE,\n  LocalizedString,\n  SharedService\n} from '../../shared';\n\nconst ANIMATION_DURATION_WITH_DELAY = `${ANIMATION_DURATION_MS}ms ${ANIMATION_DURATION_MS}ms`;\n\n/*\n * Show a strategy card that can be flipped over to see the feedback.\n */\n\n@Component({\n  selector: 'app-strategy-card',\n  templateUrl: './strategy-card.component.html',\n  styleUrls: ['./strategy-card.component.sass'],\n  animations: [\n    trigger('backFlip', [\n      transition(':enter', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(90deg)`\n        }),\n        animate(ANIMATION_DURATION_WITH_DELAY, style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        }),\n        animate(ANIMATION_DURATION_MS, style({\n          transform: `${PERSPECTIVE} rotateY(90deg)`\n        })),\n      ]),\n    ]),\n    trigger('frontFlip', [\n      transition(':leave', [\n        style({\n          transform: `${PERSPECTIVE} rotateY(0deg)`\n        }),\n        animate(ANIMATION_DURATION_MS, style({\n          transform: `${PERSPECTIVE} rotateY(-90deg)`\n        })),\n      ]),\n    ]),\n  ]\n})\nexport class StrategyCardComponent {\n\n  @Input() id: string = null;\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() buttonLabel: string = 'Lock This Strategy';\n  @Input() buttonLabelLocked: string = 'Strategy Locked';\n  @Input() titleBack: string = 'Feedback';\n  @Input() descriptionBack: string = '';\n  @Input() disabled: boolean = false;\n  @Input() flipped: boolean = false;\n  @Input() locked: boolean = false;\n\n  @Output() cardLocked = new EventEmitter<boolean>();\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  toggleLocked(): void {\n    this.cardLocked.emit(!this.locked);\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","<section *ngIf=\"!flipped\"\n         class=\"card front\"\n         [class.disabled]=\"disabled\"\n         [class.locked]=\"locked\"\n         @frontFlip>\n\n  <div class=\"content\">\n    <div class=\"description\"\n         [innerHTML]=\"t(description)\"></div>\n  </div>\n  \n  <label>\n    <span class=\"titleText\"\n          [innerHTML]=\"t(title)\"></span>\n  </label>\n\n  <button type=\"button\"\n          class=\"bottomButton\"\n          [disabled]=\"disabled\"\n          (click)=\"toggleLocked()\"\n          [innerHTML]=\"t(locked ? buttonLabelLocked : buttonLabel)\">\n  </button>\n  \n\n</section>\n\n<section *ngIf=\"flipped\"\n         class=\"card back\"\n         @backFlip>\n\n  <div class=\"content\">\n    <h3>\n      <span class=\"titleText\"\n            [innerHTML]=\"t(titleBack)\"></span>\n    </h3>\n    <div class=\"description\"\n        [innerHTML]=\"t(descriptionBack)\"></div>\n  </div>\n\n</section>","<div class=\"container\"\n     [class.bar]=\"isBar\"\n     [class.dot]=\"isDot\">\n\n  <div class=\"content\">\n    <div *ngIf=\"previousValue != null\"\n         class=\"previousValue\"\n         [style.left]=\"previousValueLeft\"></div>\n    <div *ngIf=\"isBar\"\n         class=\"valueBar\"\n         [style.width]=\"valueBarWidth\"></div>\n    <!-- <div *ngIf=\"isBar\"\n         class=\"valueBar valueChange\"\n         [class.negative]=\"valueChange &lt; 0\"\n         [style.left]=\"previousValueBarLeft\"\n         [style.width]=\"valueChangeWidth\"></div>\n    <div *ngIf=\"isDot\"\n         class=\"valueDot previousValue\"\n         [style.left]=\"previousValueDotLeft\"></div> -->\n    <div *ngIf=\"isDot\"\n         class=\"valueDot\"\n         [style.left]=\"valueDotLeft\"></div>\n  </div>\n\n  <label *ngIf=\"titleTop\"\n         class=\"titleTop\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleTop)\"></span>\n  </label>\n\n  <label *ngIf=\"titleBottom\"\n         class=\"titleBottom\">\n    <span class=\"titleText\"\n          [innerHTML]=\"t(titleBottom)\"></span>\n  </label>\n\n</div>","import { \n  Component, \n  Input\n} from '@angular/core';\nimport { \n  LocalizedString,\n  SharedService\n} from '../../shared';\n\n\nexport type ValueGaugeType = 'bar' | 'dot';\n\n\n/*\n * Show indicator values as either bars or dots on an axis.\n */\n\n@Component({\n  selector: 'app-value-gauge',\n  templateUrl: './value-gauge.component.html',\n  styleUrls: ['./value-gauge.component.sass']\n})\nexport class ValueGaugeComponent {\n\n  @Input() max: number = 10;\n  @Input() min: number = 0;\n  @Input() previousValue: number = undefined;\n  @Input() type: ValueGaugeType = 'bar';\n  @Input() titleBottom: string;\n  @Input() titleTop: string;\n  @Input() value: number = 0;\n\n  constructor(\n    private shared: SharedService\n  ) {\n  }\n\n  get isDot(): boolean {\n    return this.type === 'dot';\n  }\n\n  get isBar(): boolean {\n    return this.type === 'bar';\n  }\n\n  get valueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.value - this.min) / this.range;\n  }\n\n  get previousValueFraction(): number {\n    if (this.range === 0)\n      return 0;\n    return (this.previousValue - this.min) / this.range;\n  }\n\n  get range(): number {\n    return this.max - this.min;\n  }\n\n  get valueBarWidth(): string {\n    return `${this.valueFraction * 100}%`;\n  }\n\n  get previousValueLeft(): string {\n    return this.isDot ? \n      this._calcDotPercentage(this.previousValueFraction) :\n      `${this.previousValueFraction * 100}%`;\n  }\n\n  // get valueChange(): number {\n  //   return this.valueFraction - this.previousValueFraction;\n  // }\n\n  // get valueChangeWidth(): string {\n  //   return `${Math.abs(this.valueChange) * 100}%`;\n  // }\n\n  get valueDotLeft(): string {\n    return this._calcDotPercentage(this.valueFraction);\n  }\n\n  // get previousValueDotLeft(): string {\n  //   const margin = 10;\n  //   return `${margin + this.valueFraction * (100 - 2 * margin)}%`;\n  // }\n\n  _calcDotPercentage(fraction: number): string {\n    const margin = 10;\n    return `${margin + fraction * (100 - 2 * margin)}%`;\n  }\n\n  /*\n   * Localize a string or LocalizedString object\n   * See SharedService\n   */\n  t(text: string | LocalizedString): string {\n    return this.shared.getText(text);\n  }\n}","import {\n  Component,\n  OnInit \n} from '@angular/core';\nimport { SharedService } from '../../shared';\n\n@Component({\n  selector: 'app-title-screen',\n  templateUrl: './title-screen.component.html',\n  styleUrls: ['./title-screen.component.sass']\n})\nexport class TitleScreenComponent implements OnInit {\n\n  constructor(\n    private shared: SharedService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public t(text: string): string {\n    return this.shared.getText(text);\n  }\n}\n","<div id=\"titleAndIntro\">\n  <h1 [innerHTML]=\"t('The Agile Quest Game')\"></h1>\n\n  <div [innerHTML]=\"t('Welcome to the corner office! You are the newly appointed CEO of Acme Bank Ltd., a venerable institution on the cusp of starting its second half-century. Alas, things are about to get stormy…')\"></div>\n  \n  <button routerLink=\"game\" \n          [innerHTML]=\"t('Start game')\"></button>\n</div>\n\n<div id=\"authors\" \n     [innerHTML]=\"t('AUTHORS')\"></div>","import { Injectable } from '@angular/core';\n\nimport * as d3 from 'd3';\n\n/*\n * A basic wrapper around d3.js\n * To access the d3 namespace, use D3Service.d3\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n  public d3: any = d3;\n\n  constructor(\n  ) {\n  }\n}\n","export * from './shared.service';\nexport * from './shared.types';\nexport * from './d3.service';","import { \n  EventEmitter,\n  Inject,\n  Injectable,\n  LOCALE_ID \n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { \n  BehaviorSubject,\n  forkJoin \n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { \n  Indicator,\n  LocalizedString,\n  Ribbon,\n  Scenario,\n  Settings,\n  Strategy,\n  Texts \n} from './shared.types';\n\n\nexport const ANIMATION_DURATION_MS: number = 225;\nexport const ANIMATION_DURATION: string = ANIMATION_DURATION_MS + 'ms';\nexport const ANIMATION_EASING: string = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const ANIMATION_TIMING: string = `${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const ANIMATION_TIMING_DELAYED: string = `${ANIMATION_DURATION} ${ANIMATION_DURATION} ${ANIMATION_EASING}`;\nexport const DEFAULT_LOCALE = 'en-US';\nexport const PERSPECTIVE: string = 'perspective(1000px)';\nconst SETTINGS_URL = 'assets/data/settings.json';\nconst TEXTS_URL = 'assets/data/texts.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  error = new EventEmitter<string>();\n  firstScenario: Scenario;\n  indicators: {[id: string]: Indicator} = {};\n  ready = new BehaviorSubject<boolean>(false);\n  ribbons: {[id: string]: Ribbon} = {};\n  scenarios: {[id: string]: Scenario} = {};\n  settings: {\n    version: number,\n    rounds: number,\n  };\n  strategies: {[id: string]: Strategy} = {};\n  texts: Texts;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(LOCALE_ID) public locale: string\n  ) {\n    this.loadData();\n  }\n\n  public loadData(): void {\n    forkJoin([\n      this.http.get<Settings>(SETTINGS_URL).pipe(\n        map(d => {\n          this.processSettings(d);\n          return true;\n        })\n      ), \n      this.http.get<Texts>(TEXTS_URL).pipe(\n        map(d => {\n          this.texts = d;\n          return true;\n        })\n      ), \n    ]).subscribe(_ => this.ready.next(true));\n  }\n\n  /*\n   * Process the whole settings json object\n   */\n  public processSettings(settings: Settings): void {\n    this.settings = {\n      version: settings.version,\n      rounds:  settings.rounds\n    };\n\n    for (const list of ['indicators', 'ribbons', 'scenarios', 'strategies'])\n      this[list] = this.processJsonList(settings[list]);\n\n    this.firstScenario = settings.scenarios[0];\n  }\n\n  /*\n   * Create proper objects from settings.json sublists\n   */\n  public processJsonList(data: Array<any>): {[id: string]: any} {\n    const dict: {[id: string]: any} = {};\n    data.forEach(d => \n      dict[d.id] = d\n    );\n    return dict;\n  }\n\n  /*\n   * Return the prompt text in current locale or the text itself if that's not available.\n   * If text is a localized string, select the correct localized version or use the default.\n   * Note that if the text is to contain any HTML markup, it should be used as a bound\n   * property, i.e., <span [innerHTML]=\"shared.getText('Text')\"></span>. It will be \n   * sanitized by Angular but basic formatting and links are allowed, at least.\n   */\n  public getText(text: string | LocalizedString): string {\n    if (text == null)\n      return \"\";\n    else if (typeof text === \"string\")\n      return this.texts[text]?.[this.locale] ?? text;\n    else\n      return text[this.locale] ?? text[DEFAULT_LOCALE];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}